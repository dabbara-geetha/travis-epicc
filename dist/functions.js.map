{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/functions/functions.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","default_dxmap","require","default_hccmap","default_hcccoefn","interactions","ccs","model","disabl","age","cc_set","Set","int_hccs","diag_cats","my_dcs","key_set","new_values","filter","x","has","arry1","includes","hcc85_set","hcc47_set","hcc96_set","size","arry2","hcc188_set","hcc114_set","hcc57_set","hcc79_set","int_hccs_new","push","concat","cnt","length","index","convertToUppperCase","string","toString","toUpperCase","demo_raf","condition_list","sex","orec","ver","baserate","j","temp_condition_list","split","trim","toLowerCase","raf_dict","member","result","parseFloat","toFixed","dx_desc","dx_array","verbose","temp_dx_array","hcc_dict","dx_hccs","hcc_cust_list","entries","val","dx2cc","never_trump","unique_hccs","dx2hcc","dx_raf","raf_value","dx2raf","clean_dx","dx_values","clean_dxlist","dx_set_values","forEach","v","clean_cc","cc_array","temp_cc_array","hcc_values","clean_hcclist","cc_desc","hcc_dct","cc_info","cc","temp_hccmap","temp_cc","hccmap","hcc2raf","cc_raf","cc_combine","hccs","prep_hccs","cc_increment_raf","base_cc_array","additional_cc_array","temp_base_cc_array","temp_additional_cc_array","hcc_increment","cc_increment","neg_arry","map","element","cc_gaps","hcc_gaps","cc_gaps_raf","cc_diff","cclist","hcc_diff","cc_diff_raf","dx_increment","base_dx_array","additional_dx_array","temp_base_dx_array","temp_additional_dx_array","dx_dict","dx_increments","dx_increment_raf","dx_gaps","dx_gap","dx_gaps_raf","old_list","new_list","new_hccs","old_hccs","diff","cal1","cal2","cal3","raf","gaps","Math","round","Array","from","get_hcc_dx","dx_list","get_raf","dx_dct","dxdct_hccs","collator","Intl","Collator","undefined","numeric","sensitivity","sort","compare","dxmap","unique_dx","dx","JSON","parse","stringify","agesex_edits","hcc","add","got_trumped","child","temp_a","temp_b","e","temp_c","trumped_hcc","hcc_list","list_dx","String","replace","dx_set","hcc_map","hcc_list_temp","isNaN","hcc1","hcc_set","hcc2","temp_hcc_list","trump_hccs","trumped_set","temp_hcc_set","final_hccs","this","default_baserate","default_never_trump","dxinc","mydx","temp","dx_diffc","old_dx","new_dx","dxdiff","old_set","new_set","old_children","new_children","new_parents","hcc3","new_hccs_temp","downgraded_temp","downgraded","downgrade_to_temp","downgrade_to","upgraded","prep_hccs_set","upgraded_temp","del_hccs_temp","del_hccs_union","del_hccs","old_raf","new_raf","delta_raf","premium","flag","endsWith","demo_codes","agesex","cond_dict","condition_resolver","allhcc","condition","dx_hcc","set","dic_dxlist","None","temp_dict","mem_out_wrapper","dict1","dic_hcclist","conditionlist","list_hcc","item","Number","isInteger","startsWith","dct","combined_hccs","ed_leukemia","ed_bronchitis","ed_vasc_insf","ed_emphysema","ed_breastca","ed_low_bw","ed_conjoined","ed_newbn_substance","ed_chron_resp","ed_disruptive_mood","ed_hemophilia","female_sex","edit_dct","demo_lst","hcc_lst","hcccoefn","demo_detail","hcc_detail","hcc_raf","demo","label","score","raf_dct","demo_str","age_maps","trunc","medicaid","origds","age_labels","age_lower_bounds","age_upper_bounds","lower_bound","mcaid_flag","origds_flag","ds_str"],"mappings":"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","file":"functions.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 121);\n","var default_dxmap = require('./load_dxmap.json');\r\nvar default_hccmap = require('./load_hccmap.json');\r\nvar default_hcccoefn = require('./load_hcccoefn.json');\r\nvar default_ver = 'v23';\r\nvar default_model = 'CNA'; \r\nvar default_baserate = 868.0;\r\nvar default_verbose = true;\r\nvar default_never_trump = 0;\r\nvar interactions = {'v22': v22_interactions, 'v23': v23_interactions, 'v24': v24_interactions};\r\n\r\n// function to convert to uppercase (a fix to unit tests)\r\nfunction convertToUppperCase(string) {\r\n  var result = string.toString().toUpperCase();\r\n  return result;\r\n}\r\n\r\n/**\r\n * Returns demographic raf value based on age, gender and coding model\r\n * @customfunction\r\n * @param {string[][]} condition_list accepts array\r\n */\r\nfunction demo_raf(condition_list, age=65, sex='M', model='', orec='0', ver='', baserate=0.0) {\r\n  for (var i = 0; i < condition_list.length; i++) {\r\n    for (var j = 0; j < condition_list[i].length; j++) {\r\n      condition_list = condition_list;\r\n    }\r\n  }\r\n  var temp_condition_list = condition_list.toString();\r\n  temp_condition_list = temp_condition_list.split(\",\");\r\n  for (i = 0; i < temp_condition_list.length; i++) {\r\n    temp_condition_list[i] = temp_condition_list[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n\r\n  var raf_dict = member(condition_list, age=age, sex=sex, model=model, orec=orec, ver=ver, baserate=baserate);\r\n  var result = raf_dict['raf']['demo_score'];\r\n  result = parseFloat(result);\r\n  result = result.toFixed(3);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * Returns comma-separated list of descriptions of each DX Code from CMS crosswalk\r\n * @customfunction\r\n * @param {string[][]} dx_array accepts array of hcc codes\r\n */\r\nfunction dx_desc(dx_array, ver='', age=0, sex='', verbose=true) {\r\n  for (i = 0; i < dx_array.length; i++) {\r\n      for (j = 0; j < dx_array[i].length; j++) {\r\n        dx_array = dx_array;\r\n      }\r\n  }\r\n  var temp_dx_array = dx_array.toString();\r\n  temp_dx_array = temp_dx_array.split(\",\");\r\n  for (i = 0; i < temp_dx_array.length; i++) {\r\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  verbose = verbose || default_verbose;\r\n  \r\n  var hcc_dict = dx_hccs(temp_dx_array, ver=ver, age=age, sex=sex, verbose=verbose);\r\n  var hcc_cust_list = [];\r\n  for (var [key, value] of Object.entries(hcc_dict)) {\r\n    var val = key + \":\" + value[\"desc\"];\r\n    hcc_cust_list.push(val);\r\n  }\r\n  return hcc_cust_list.toString();\r\n}\r\n\r\n/**\r\n * Returns a comma separated list of the ccs represented by a list of DX codes after trumping/interaction logic is applied\r\n * @customfunction\r\n * @param {string[][]} dx_array accepts array of dx codes\r\n */\r\nfunction dx2cc(dx_array, age=0, ver='', model='', sex='', disabl=false, never_trump=0, verbose=false) {\r\n  for (var i = 0; i < dx_array.length; i++) {\r\n    for (var j = 0; j < dx_array[i].length; j++) {\r\n      dx_array = dx_array;\r\n    }\r\n  }\r\n  var temp_dx_array = dx_array.toString();\r\n  temp_dx_array = temp_dx_array.split(\",\");\r\n  for (i = 0; i < temp_dx_array.length; i++) {\r\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  never_trump = never_trump || default_never_trump;\r\n  var unique_hccs = dx2hcc(temp_dx_array, age=age, ver=ver, model=model, sex=sex, disabl=disabl, never_trump=never_trump, verbose=verbose);\r\n  return unique_hccs.toString();\r\n}\r\n\r\n/**\r\n * Returns cc raf of associated dx codes after conversion to cc and trumping/interaction logic is applied (equivalent of cc_raf(dx2cc(dx_array))\r\n * @customfunction\r\n * @param {string[][]} dx_array accepts array of dx codes\r\n */\r\nfunction dx_raf(dx_array, age=0, ver='', model='', sex='', disabl=false, verbose=false, never_trump=0, baserate=0.0) {\r\n  /*\r\n  Utility to calculate raf from list of DX codes\r\n  */\r\n  for (var i = 0; i < dx_array.length; i++) {\r\n    for (var j = 0; j < dx_array[i].length; j++) {\r\n      dx_array = dx_array;\r\n    }\r\n  }\r\n  var temp_dx_array = dx_array.toString();\r\n  temp_dx_array = temp_dx_array.split(\",\");\r\n  for (i = 0; i < temp_dx_array.length; i++) {\r\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  var raf_value = dx2raf(temp_dx_array, age=age, ver=ver, model=model, sex=sex, disabl=disabl, verbose=verbose, never_trump=never_trump, baserate=baserate);\r\n  var result = parseFloat(raf_value);\r\n  result = result.toFixed(3);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * Given a list of dx codes, return a list of deduped, normalized and untrumped dx codes valid for the coding model\r\n * @customfunction\r\n * @param {string[][]} dx_array accepts array of dx codes\r\n */\r\nfunction clean_dx(dx_array, ver='') {\r\n  \r\n  // Convert string to list, dedupe, and ensure DX are formatted correctly.\r\n  for (var i = 0; i < dx_array.length; i++) {\r\n    for (var j = 0; j < dx_array[i].length; j++) {\r\n      dx_array = dx_array;\r\n    }\r\n  }\r\n  var temp_dx_array = dx_array.toString();\r\n  temp_dx_array = temp_dx_array.split(\",\");\r\n  for (i = 0; i < temp_dx_array.length; i++) {\r\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  var dx_values = clean_dxlist(temp_dx_array, ver=ver);\r\n  var dx_set_values = [];\r\n  dx_values.forEach(v => dx_set_values.push(v));\r\n  return dx_set_values.toString();\r\n}\r\n\r\n/**\r\n * Given a list of ccs, return a list of deduped, normalized and untrumped ccs codes valid for the coding model\r\n * @customfunction\r\n * @param {string[][]} cc_array accepts array of hcc codes\r\n */\r\nfunction clean_cc(cc_array, ver='') {\r\n  for (var i = 0; i < cc_array.length; i++) {\r\n      for (var j = 0; j < cc_array[i].length; j++) {\r\n        cc_array = cc_array;\r\n      }\r\n  }\r\n  var temp_cc_array = cc_array.toString();\r\n  temp_cc_array = temp_cc_array.split(\",\");\r\n  for (i = 0; i < temp_cc_array.length; i++) {\r\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  var hcc_values = clean_hcclist(temp_cc_array, ver=ver);\r\n  return hcc_values.toString();\r\n}\r\n\r\n/**\r\n * Returns comma-separated list of descriptions of each HCC Code from CMS crosswalk\r\n * @customfunction\r\n * @param {string[][]} cc_array accepts array of hcc codes\r\n */\r\nfunction cc_desc(cc_array, ver='', age=0, sex='', verbose=false) {\r\n  for (i = 0; i < cc_array.length; i++) {\r\n      for (j = 0; j < cc_array[i].length; j++) {\r\n        cc_array = cc_array;\r\n      }\r\n  }\r\n  var temp_cc_array = cc_array.toString();\r\n  temp_cc_array = temp_cc_array.split(\",\");\r\n  for (i = 0; i < temp_cc_array.length; i++) {\r\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  verbose = verbose || default_verbose;\r\n  var hcc_dict = hcc_dct(temp_cc_array, ver=ver, age=age, sex=sex, verbose=verbose);\r\n  var hcc_cust_list = [];\r\n  for (var [key, value] of Object.entries(hcc_dict)) {\r\n    var val = key + \":\" + value[\"desc\"];\r\n    hcc_cust_list.push(val);\r\n  }\r\n  return hcc_cust_list.toString();\r\n}\r\n\r\n/**\r\n * Returns multi-line info block for an HCC: Description, Children, Parents, RAF\r\n * @customfunction\r\n * @param {string[][]} cc accepts array of hcc codes\r\n */\r\nfunction cc_info(cc, ver='', model='', disabl=false, age=0, never_trump=0, baserate=0.0) {\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  var temp_hccmap, raf_value;\r\n  for (i = 0; i < cc.length; i++) {\r\n      for (j = 0; j < cc[i].length; j++) {\r\n        cc = cc;\r\n      }\r\n  }\r\n  var temp_cc = cc.toString();\r\n  temp_cc = temp_cc.split(\",\");\r\n  for (i = 0; i < temp_cc.length; i++) {\r\n    temp_cc[i] = temp_cc[i].toString().trim();\r\n  }\r\n  var hccmap = default_hccmap[ver];\r\n  temp_hccmap = hccmap[temp_cc];\r\n  raf_value = hcc2raf(temp_cc, ver=ver, model=model, disabl=disabl, age=age, never_trump=never_trump, baserate=baserate);\r\n  raf_value = parseFloat(raf_value);\r\n  raf_value = raf_value.toFixed(3);\r\n  var result = `desc: ${temp_hccmap['desc']}, children: ${temp_hccmap['children']}, parents: ${temp_hccmap['parents']}, RAF: ${raf_value}`;\r\n  return result;\r\n}\r\n\r\n/**\r\n * Returns cc raf (does not include demographic RAF) of cc codes after trumping/interaction logic is applied\r\n * @customfunction\r\n * @param {string[][]} cc_array accepts array of hcc codes\r\n */\r\nfunction cc_raf(cc_array, ver='', model='', disabl=false, age=0, never_trump=0, baserate=0.0) {\r\n  for (i = 0; i < cc_array.length; i++) {\r\n      for (j = 0; j < cc_array[i].length; j++) {\r\n        cc_array = cc_array;\r\n      }\r\n  }\r\n  var temp_cc_array = cc_array.toString();\r\n  temp_cc_array = temp_cc_array.split(\",\");\r\n  for (i = 0; i < temp_cc_array.length; i++) {\r\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  var raf_value = hcc2raf(temp_cc_array, ver=ver, model=model, disabl=disabl, age=age, never_trump=never_trump, baserate=baserate);\r\n  var result = parseFloat(raf_value);\r\n  result = result.toFixed(3);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * Returns a list of ccs after combining them and applying trumping/interaction logic\r\n * @customfunction\r\n * @param {string[][]} cc_array accepts array of hcc codes\r\n */\r\nfunction cc_combine(cc_array, ver='', model='', age=0, disabl=false, never_trump=0) {\r\n  for (i = 0; i < cc_array.length; i++) {\r\n      for (j = 0; j < cc_array[i].length; j++) {\r\n        cc_array = cc_array;\r\n      }\r\n  }\r\n  var temp_cc_array = cc_array.toString();\r\n  temp_cc_array = temp_cc_array.split(\",\");\r\n  for (i = 0; i < temp_cc_array.length; i++) {\r\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  never_trump = never_trump || default_never_trump;\r\n  var hccs = prep_hccs(temp_cc_array, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump);\r\n  return hccs.toString();\r\n}\r\n\r\n/**\r\n * Returns the RAF of the net incremental change (+Adds - Upgraded) between cc_lists.  Equivalent of cc_raf(cc_diff_increment)\r\n * @customfunction\r\n * @param {string[][]} base_cc_array accepts array of cc codes\r\n * @param {string[][]} additional_cc_array accepts array of cc codes\r\n */\r\nfunction cc_increment_raf(base_cc_array=[], additional_cc_array=[], ver='', model='', age=0, disabl=false, never_trump=0, baserate=0.0) {\r\n  for (i = 0; i < base_cc_array.length; i++) {\r\n    for (j = 0; j < base_cc_array[i].length; j++) {\r\n      base_cc_array = base_cc_array;\r\n    }\r\n  }\r\n  var temp_base_cc_array = base_cc_array.toString();\r\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\r\n  for (i = 0; i < temp_base_cc_array.length; i++) {\r\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_cc_array.length; i++) {\r\n    for (j = 0; j < additional_cc_array[i].length; j++) {\r\n      additional_cc_array = additional_cc_array;\r\n    }\r\n  }\r\n  var temp_additional_cc_array = additional_cc_array.toString();\r\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\r\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\r\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  age = age || 0;\r\n  disabl = disabl || false;\r\n  var hcc_dict = hcc_increment(temp_base_cc_array, temp_additional_cc_array, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump, baserate=baserate);\r\n  var result = hcc_dict['raf'];\r\n  result = parseFloat(result);\r\n  result = result.toFixed(3);\r\n  return result.toString(); \r\n}\r\n\r\n/**\r\n * Returns the net incremental change between cc_lists, for example for calculating the value of a coding project over claims. Equivalent of +Adds - Upgraded in the format('+HCC001, +HCC18, - HCC019')\r\n * @customfunction\r\n * @param {string[][]} base_cc_array accepts array of cc codes\r\n * @param {string[][]} additional_cc_array accepts array of cc codes\r\n */\r\nfunction cc_increment(base_cc_array=[], additional_cc_array=[], ver='', model='', age=0, disabl=false, never_trump=0, baserate=0.0) {\r\n  for (i = 0; i < base_cc_array.length; i++) {\r\n    for (j = 0; j < base_cc_array[i].length; j++) {\r\n      base_cc_array = base_cc_array;\r\n    }\r\n  }\r\n  var temp_base_cc_array = base_cc_array.toString();\r\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\r\n  for (i = 0; i < temp_base_cc_array.length; i++) {\r\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_cc_array.length; i++) {\r\n    for (j = 0; j < additional_cc_array[i].length; j++) {\r\n      additional_cc_array = additional_cc_array;\r\n    }\r\n  }\r\n  var temp_additional_cc_array = additional_cc_array.toString();\r\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\r\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\r\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  age = age || 0;\r\n  disabl = disabl || false;\r\n  var hcc_dict = hcc_increment(temp_base_cc_array, temp_additional_cc_array, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump, baserate=baserate);\r\n  var neg_arry = (hcc_dict['upgraded']).map(element => '-' + element);\r\n  var result = hcc_dict['adds'].concat(neg_arry);\r\n  return result.toString(); \r\n}\r\n\r\n/**\r\n * Compares a base list of ccs and additional ccs and returns a list of ccs that are deletes or downgrades between the additional codes vs the baseline\r\n * @customfunction\r\n * @param {string[][]} base_cc_array accepts array of cc codes\r\n * @param {string[][]} additional_cc_array accepts array of cc codes\r\n */\r\nfunction cc_gaps(base_cc_array=[], additional_cc_array=[], ver='', model='', age=0, sex='', disabl=false, baserate=0.0) {\r\n  for (i = 0; i < base_cc_array.length; i++) {\r\n    for (j = 0; j < base_cc_array[i].length; j++) {\r\n      base_cc_array = base_cc_array;\r\n    }\r\n  }\r\n  var temp_base_cc_array = base_cc_array.toString();\r\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\r\n  for (i = 0; i < temp_base_cc_array.length; i++) {\r\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_cc_array.length; i++) {\r\n    for (j = 0; j < additional_cc_array[i].length; j++) {\r\n      additional_cc_array = additional_cc_array;\r\n    }\r\n  }\r\n  var temp_additional_cc_array = additional_cc_array.toString();\r\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\r\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\r\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\r\n  }\r\n  \r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n\r\n  var hcc_dict = hcc_gaps(temp_base_cc_array, temp_additional_cc_array, ver=ver, model=model, age=age, disabl=disabl, baserate=baserate);\r\n  var result = hcc_dict['Deletes'].concat(hcc_dict['Downgraded']);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * Compares a base list of ccs and additional ccs and returns raf of ccs that are deletes or downgrades between the additional codes vs the baseline\r\n * @customfunction\r\n * @param {string[][]} base_cc_array accepts array of cc codes\r\n * @param {string[][]} additional_cc_array accepts array of cc codes\r\n */\r\nfunction cc_gaps_raf(base_cc_array=[], additional_cc_array=[], ver='', model='', age=0, sex='', disabl=false, baserate=0.0) {\r\n  for (i = 0; i < base_cc_array.length; i++) {\r\n    for (j = 0; j < base_cc_array[i].length; j++) {\r\n      base_cc_array = base_cc_array;\r\n    }\r\n  }\r\n  var temp_base_cc_array = base_cc_array.toString();\r\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\r\n  for (i = 0; i < temp_base_cc_array.length; i++) {\r\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_cc_array.length; i++) {\r\n    for (j = 0; j < additional_cc_array[i].length; j++) {\r\n      additional_cc_array = additional_cc_array;\r\n    }\r\n  }\r\n  var temp_additional_cc_array = additional_cc_array.toString();\r\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\r\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\r\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\r\n  }\r\n  \r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n\r\n  var hcc_dict = hcc_gaps(temp_base_cc_array, temp_additional_cc_array, ver=ver, model=model, age=age, disabl=disabl, baserate=baserate);\r\n  var result = hcc_dict['raf'];\r\n  result = parseFloat(result);\r\n  result = result.toFixed(3);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * Compares a base list of ccs and additional ccs and returns an information block on the differences ; eg: \"Adds: HCC001, HCC18; Deletes: HCC135; Upgraded: HCC019; Downgraded:\"\r\n * @customfunction\r\n * @param {string[][]} base_cc_array accepts array of cc codes\r\n * @param {string[][]} additional_cc_array accepts array of cc codes\r\n *\r\n */\r\nfunction cc_diff(base_cc_array=[], additional_cc_array=[], ver='', age=0, sex='', model='', disabl=false, never_trump=0, baserate=0.0) {\r\n  for (i = 0; i < base_cc_array.length; i++) {\r\n    for (j = 0; j < base_cc_array[i].length; j++) {\r\n      base_cc_array = base_cc_array;\r\n    }\r\n  }\r\n  var temp_base_cc_array = base_cc_array.toString();\r\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\r\n  for (i = 0; i < temp_base_cc_array.length; i++) {\r\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_cc_array.length; i++) {\r\n    for (j = 0; j < additional_cc_array[i].length; j++) {\r\n      additional_cc_array = additional_cc_array;\r\n    }\r\n  }\r\n  var temp_additional_cc_array = additional_cc_array.toString();\r\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\r\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\r\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  var cclist = hcc_diff(temp_base_cc_array, temp_additional_cc_array, ver=ver, age=age, model=model, disabl=disabl, never_trump=never_trump, baserate=baserate);\r\n  var result = `adds: ${cclist['adds']}, upgraded: ${cclist['upgraded']}, downgraded: ${cclist['downgraded']}, downgraded_to: ${cclist['downgrade_to']}, deletes: ${cclist['deletes']}`;\r\n  return result;\r\n}\r\n\r\n/**\r\n * Returns net raf difference between baseline ccs and additional ccs\r\n * @customfunction\r\n * @param {string[][]} base_cc_array accepts array of cc codes\r\n * @param {string[][]} additional_cc_array accepts array of cc codes\r\n *\r\n */\r\nfunction cc_diff_raf(base_cc_array=[], additional_cc_array=[], ver='', age=0, sex='', model='', disabl=false, never_trump=0, baserate=0.0) {\r\n  for (i = 0; i < base_cc_array.length; i++) {\r\n    for (j = 0; j < base_cc_array[i].length; j++) {\r\n      base_cc_array = base_cc_array;\r\n    }\r\n  }\r\n  var temp_base_cc_array = base_cc_array.toString();\r\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\r\n  for (i = 0; i < temp_base_cc_array.length; i++) {\r\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_cc_array.length; i++) {\r\n    for (j = 0; j < additional_cc_array[i].length; j++) {\r\n      additional_cc_array = additional_cc_array;\r\n    }\r\n  }\r\n  var temp_additional_cc_array = additional_cc_array.toString();\r\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\r\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\r\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  var cclist = hcc_diff(temp_base_cc_array, temp_additional_cc_array, ver=ver, age=age, model=model, disabl=disabl, never_trump=never_trump, baserate=baserate);\r\n  var result = parseFloat(cclist['raf']);\r\n  result = result.toFixed(3);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * Compares a base list of dx and additional dx and returns an information block on the differences ; eg: \"Adds: E119,  I2720; Deletes: I495; Upgraded: F10250; Downgraded:\"\r\n * @customfunction\r\n * @param {string[][]} base_dx_array accepts array of dx codes\r\n * @param {string[][]} additional_dx_array accepts array of dxs codes\r\n *\r\n */\r\nfunction dx_diff(base_dx_array=[], additional_dx_array=[], ver='', model='', never_trump=0, baserate=0.0) {\r\n  for (i = 0; i < base_dx_array.length; i++) {\r\n    for (j = 0; j < base_dx_array[i].length; j++) {\r\n      base_dx_array = base_dx_array;\r\n    }\r\n  }\r\n  var temp_base_dx_array = base_dx_array.toString();\r\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\r\n  for (i = 0; i < temp_base_dx_array.length; i++) {\r\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_dx_array.length; i++) {\r\n    for (j = 0; j < additional_dx_array[i].length; j++) {\r\n      additional_dx_array = additional_dx_array;\r\n    }\r\n  }\r\n  var temp_additional_dx_array = additional_dx_array.toString();\r\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\r\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\r\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  var cclist = dx_diffc(temp_base_dx_array, temp_additional_dx_array, ver, model, never_trump, baserate);\r\n  var result = `adds: ${cclist['adds']}, upgraded: ${cclist['upgraded']}, downgraded: ${cclist['downgraded']}, downgraded_to: ${cclist['downgrade_to']}, deletes: ${cclist['deletes']}`;\r\n  return result;\r\n}\r\n\r\n/**\r\n * Returns net raf difference between baseline ccs and additional ccs\r\n * @customfunction\r\n * @param {string[][]} base_dx_array accepts array of dx codes\r\n * @param {string[][]} additional_dx_array accepts array of dxs codes\r\n *\r\n */\r\nfunction dx_diff_raf(base_dx_array=[], additional_dx_array=[], ver='', model='', never_trump=0, baserate=0.0) {\r\n  for (i = 0; i < base_dx_array.length; i++) {\r\n    for (j = 0; j < base_dx_array[i].length; j++) {\r\n      base_dx_array = base_dx_array;\r\n    }\r\n  }\r\n  var temp_base_dx_array = base_dx_array.toString();\r\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\r\n  for (i = 0; i < temp_base_dx_array.length; i++) {\r\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_dx_array.length; i++) {\r\n    for (j = 0; j < additional_dx_array[i].length; j++) {\r\n      additional_dx_array = additional_dx_array;\r\n    }\r\n  }\r\n  var temp_additional_dx_array = additional_dx_array.toString();\r\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\r\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\r\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  var cclist = dx_diffc(temp_base_dx_array, temp_additional_dx_array, ver, model, never_trump, baserate);\r\n  var result = parseFloat(cclist['raf']);\r\n  result = result.toFixed(3);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * Returns the net incremental change between dx_lists, for example for calculating the value of a coding project over claims. Equivalent of +Adds - Upgraded in the format('+dx001, +dx18, - dx019')\r\n * @customfunction\r\n * @param {string[][]} base_dx_array accepts array of cc codes\r\n * @param {string[][]} additional_dx_array accepts array of cc codes\r\n *\r\n */\r\nfunction dx_increment(base_dx_array=[], additional_dx_array=[], ver='', model='', age=0, disabl=false, never_trump=0, baserate=0.0) {\r\n  for (i = 0; i < base_dx_array.length; i++) {\r\n    for (j = 0; j < base_dx_array[i].length; j++) {\r\n      base_dx_array = base_dx_array;\r\n    }\r\n  }\r\n  var temp_base_dx_array = base_dx_array.toString();\r\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\r\n  for (i = 0; i < temp_base_dx_array.length; i++) {\r\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_dx_array.length; i++) {\r\n    for (j = 0; j < additional_dx_array[i].length; j++) {\r\n      additional_dx_array = additional_dx_array;\r\n    }\r\n  }\r\n  var temp_additional_dx_array = additional_dx_array.toString();\r\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\r\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\r\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  var dx_dict  = dx_increments(temp_base_dx_array, temp_additional_dx_array, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump, baserate=baserate);\r\n  var neg_arry = (dx_dict['upgraded']).map(element => '-' + element);\r\n  var result = dx_dict['adds'].concat(neg_arry);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * Returns the RAF of the net incremental change (+Adds - Upgraded) between dx_lists.  Equivalent of dx_raf(dx_diff_increment)\r\n * @customfunction\r\n * @param {string[][]} base_dx_array accepts array of cc codes\r\n * @param {string[][]} additional_dx_array accepts array of cc codes\r\n *\r\n */\r\nfunction dx_increment_raf(base_dx_array=[], additional_dx_array=[], ver='', model='', age=0, disabl=false, never_trump=0, baserate=0.0) {\r\n  for (i = 0; i < base_dx_array.length; i++) {\r\n    for (j = 0; j < base_dx_array[i].length; j++) {\r\n      base_dx_array = base_dx_array;\r\n    }\r\n  }\r\n  var temp_base_dx_array = base_dx_array.toString();\r\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\r\n  for (i = 0; i < temp_base_dx_array.length; i++) {\r\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_dx_array.length; i++) {\r\n    for (j = 0; j < additional_dx_array[i].length; j++) {\r\n      additional_dx_array = additional_dx_array;\r\n    }\r\n  }\r\n  var temp_additional_dx_array = additional_dx_array.toString();\r\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\r\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\r\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  var dx_dict  = dx_increments(temp_base_dx_array, temp_additional_dx_array, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump, baserate=baserate);\r\n  var result = dx_dict['raf'];\r\n  var result = parseFloat(result);\r\n  result = result.toFixed(3);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * Compares a base list of dxs and additional dxs and returns a list of dxs that are deletes or downgrades between the additional codes vs the baseline\r\n * @customfunction\r\n * @param {string[][]} base_dx_array accepts array of dx codes\r\n * @param {string[][]} additional_dx_array accepts array of dx codes\r\n *\r\n */\r\nfunction dx_gaps(base_dx_array=[], additional_dx_array=[],  ver='', model='', age=0, sex='', disabl=false, baserate=0.0) {\r\n  for (i = 0; i < base_dx_array.length; i++) {\r\n    for (j = 0; j < base_dx_array[i].length; j++) {\r\n      base_dx_array = base_dx_array;\r\n    }\r\n  }\r\n  var temp_base_dx_array = base_dx_array.toString();\r\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\r\n  for (i = 0; i < temp_base_dx_array.length; i++) {\r\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_dx_array.length; i++) {\r\n    for (j = 0; j < additional_dx_array[i].length; j++) {\r\n      additional_dx_array = additional_dx_array;\r\n    }\r\n  }\r\n  var temp_additional_dx_array = additional_dx_array.toString();\r\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\r\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\r\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  var dx_dict = dx_gap(temp_base_dx_array, temp_additional_dx_array, ver=ver, model=model, age=age, disabl=disabl, baserate=baserate);\r\n  var result = dx_dict['Deletes'].concat(dx_dict['Downgraded']);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * dx_diff_deletes_raf focuses on YoY Chronic Gaps and downgrades (net raf of downgraded).  Equivalent of dx_chronic(dx_diff_deletes). \r\n * @customfunction\r\n * @param {string[][]} base_dx_array accepts array of dx codes\r\n * @param {string[][]} additional_dx_array accepts array of dx codes\r\n *\r\n */\r\nfunction dx_gaps_raf(base_dx_array=[], additional_dx_array=[],  ver='', model='', age=0, sex='', disabl=false, baserate=0.0) {\r\n  for (i = 0; i < base_dx_array.length; i++) {\r\n    for (j = 0; j < base_dx_array[i].length; j++) {\r\n      base_dx_array = base_dx_array;\r\n    }\r\n  }\r\n  var temp_base_dx_array = base_dx_array.toString();\r\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\r\n  for (i = 0; i < temp_base_dx_array.length; i++) {\r\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_dx_array.length; i++) {\r\n    for (j = 0; j < additional_dx_array[i].length; j++) {\r\n      additional_dx_array = additional_dx_array;\r\n    }\r\n  }\r\n  var temp_additional_dx_array = additional_dx_array.toString();\r\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\r\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\r\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  var dx_dict = dx_gap(temp_base_dx_array, temp_additional_dx_array, ver=ver, model=model, age=age, disabl=disabl, baserate=baserate);\r\n  var result = dx_dict['raf'];\r\n  var result = parseFloat(result);\r\n  result = result.toFixed(3);\r\n  return result.toString();\r\n}\r\n\r\nfunction hcc_gaps(old_list=[], new_list=[], ver='', model='', age=0, disabl=false, baserate=0.0) {\r\n  /*\r\n  Utility to identify hccs that were dropped or downgraded from one list to the next\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n\r\n  var new_hccs = prep_hccs(new_list, ver=ver, model=model, age=age, disabl=disabl);\r\n  var old_hccs = prep_hccs(old_list, ver=ver, model=model, age=age, disabl=disabl);\r\n\r\n  var diff = hcc_diff(old_hccs, new_hccs, ver=ver, age='', model=model, disabl=disabl, never_trump='', baserate=baserate);\r\n  var cal1 = parseFloat(hcc2raf(diff['deletes'], ver=ver, model=model, disabl=disabl, age=age));\r\n  var cal2 = parseFloat(hcc2raf(diff['downgraded'], ver=ver, model=model, disabl=disabl, age=age));\r\n  var cal3 = parseFloat(hcc2raf(diff['downgrade_to'], ver=ver, model=model, disabl=disabl, age=age));\r\n  var raf = -(cal1+cal2)+cal3;\r\n  var gaps = { \"Deletes\": diff[\"deletes\"], \"Downgraded\": diff[\"downgraded\"], \"raf\": raf, \"premium\": Math.round(raf * baserate, 2) };\r\n  return gaps;\r\n}\r\n\r\nfunction dx_gap(old_list=[], new_list=[], ver='', model='', age=0, disabl=false, baserate=0.0) {\r\n  /*\r\n  Utility to identify hccs that were dropped or downgraded from one list to the next\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n\r\n  var old_hccs = dx2hcc(old_list, age=age, ver=ver, model=model, sex='', disabl=disabl, never_trump='', verbose='');\r\n  var new_hccs = dx2hcc(new_list, age=age, ver=ver, model=model, sex='', disabl=disabl, never_trump='', verbose='');\r\n  var diff = hcc_gaps(old_hccs, new_hccs, ver=ver, model=model, age=age, disabl=disabl, baserate=baserate);\r\n  diff['Downgraded'] = Array.from(get_hcc_dx(diff['Downgraded'], clean_dxlist(old_list, ver), ver));\r\n  diff['Deletes'] = Array.from(get_hcc_dx(diff['Deletes'], clean_dxlist(old_list, ver), ver));\r\n  return diff;\r\n}\r\n\r\nfunction dx2raf(dx_list, age=0, ver='', model='', sex='', disabl=false, verbose=false, never_trump=0, baserate=0.0) {\r\n  /*\r\n  Utility to calculate raf from list of DX codes\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n\r\n  var hccs = dx2hcc(dx_list=dx_list, age=age, ver=ver, model=model, sex=sex, disabl=disabl, never_trump=never_trump, verbose=verbose);\r\n  var raf = get_raf([], hccs, ver=ver, model=model, verbose='', baserate=baserate);\r\n  return raf[\"hcc_score\"];\r\n}\r\n\r\nfunction dx2hcc(dx_list, age=0, ver='', model='', sex='', disabl=false, never_trump=0, verbose=false) {\r\n  /*\r\n  Utility to calculate a list of unique, trumped, HCCs from dx codes, includes interactions and age/sex edits.\r\n  :param dx_list: list of str\r\n                  List of DX Codes (case and decimal insensitive)\r\n  :param ver: str\r\n              HCC Model version\r\n  :param age: float\r\n              Beneficiary age\r\n  :param verbose:\r\n  :param disabl: bool\r\n                  Disability flag\r\n  :param sex: Gender {\"M\" or \"F\"}\r\n  :return: list of str\r\n          List of HCC codes\r\n  */\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  never_trump = never_trump || default_never_trump;\r\n  var dx_dct = dx_hccs(dx_list, ver=ver, age=age, sex=sex, verbose=verbose);\r\n  var unique_hccs = dxdct_hccs(dx_dct, never_trump=never_trump);\r\n  var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\r\n  unique_hccs.sort(collator.compare);\r\n  unique_hccs = interactions[ver](unique_hccs, model, disabl, age);\r\n  return unique_hccs;\r\n}\r\n\r\nfunction dx_hccs(dx_list, ver='', age=0, sex='', verbose=true) {\r\n  /*\r\n  Look up the HCC code for each unique DX code in a list of DX. Includes trumping and agesex edits\r\n  :param dx_list: list of str\r\n                  List of dx codes; case and decimal insensitive\r\n  :param ver: str\r\n              Optional HCC version. Otherwise uses default version of ccalc object\r\n  :param age: float\r\n              Member age\r\n  :param sex: str\r\n              Member gender {\"M\"/\"F\"}\r\n  :param verbose: bool\r\n                  Include Non HCC DX in outputs\r\n  :return: dict\r\n          Dict of unique DX codes and their corresponding hcc codes\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  verbose = verbose || default_verbose;\r\n\r\n  var dxmap = default_dxmap[ver];\r\n  var hccmap = default_hccmap[ver];\r\n  var dx_dct = {};\r\n\r\n  var unique_dx = clean_dxlist(dx_list, ver=ver);\r\n  // Validate DX against model and pull in DX info  \r\n  for (var dx of unique_dx) {\r\n      if (dx in dxmap) {\r\n          dx_dct[dx] = JSON.parse(JSON.stringify(dxmap[dx]));\r\n      } else if (verbose) {\r\n          dx_dct[dx] = { \"desc\": \"\", \"hccs\": {} };\r\n      }\r\n  }\r\n\r\n  if (age && sex) {  // age and sex are optional. w/o them this function can still generically do dx->hcc calcs\r\n      agesex_edits(dx_dct, age=age, sex=sex);\r\n  }\r\n\r\n  // Find all unique HCCs that are valid in the hcc ver\r\n  var unique_hccs = new Set();\r\n\r\n  for (var key in dx_dct) {\r\n      if (dx_dct.hasOwnProperty(key)) {\r\n          for (var hcc in dx_dct[key]['hccs']) {\r\n              if (dx_dct[key]['hccs'].hasOwnProperty(hcc)) {\r\n                  if (dx_dct[key]['hccs'][hcc] in hccmap) {\r\n                      unique_hccs.add(dx_dct[key]['hccs'][hcc]);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n  };\r\n\r\n  var got_trumped = {};\r\n  for (var hcc of unique_hccs) {\r\n      for (var child of hccmap[hcc]['children']) {\r\n          got_trumped[child] = hcc;\r\n      }\r\n  }\r\n\r\n  // Apply trumping and convert to HCC sets to lists (better for json serialization)\r\n\r\n  for (var dx in dx_dct) {\r\n      if (dx_dct.hasOwnProperty(dx)) {\r\n          var temp_a = dx_dct[dx]['hccs'];\r\n          var temp_b = [];\r\n          for (var i in dx_dct[dx]['hccs']) {\r\n              temp_b.push({ 'desc': hccmap[dx_dct[dx]['hccs'][i]]['desc'] });\r\n          }\r\n          var c = temp_a.map(function (e, i) {\r\n              return [e, temp_b[i]];\r\n          });\r\n          var temp_c = {};\r\n          for (var key in c) {\r\n              if (c.hasOwnProperty(key)) {\r\n                  temp_c[c[key][0]] = c[key][1];\r\n              }\r\n          }\r\n          dx_dct[dx]['hccs'] = temp_c;\r\n          for (var trumped_hcc in got_trumped) {\r\n              if (got_trumped.hasOwnProperty(trumped_hcc)) {\r\n                  if (trumped_hcc in dx_dct[dx]['hccs']) { // If we find trumped HCC, replace with note of its demise\r\n                      dx_dct[dx]['hccs'][trumped_hcc]['trumped by'] = got_trumped[trumped_hcc];\r\n                  }\r\n              }\r\n          }\r\n      }\r\n  }\r\n  return dx_dct;\r\n}\r\n\r\nfunction dxdct_hccs(dx_dct, never_trump=0) {\r\n  never_trump = never_trump || default_never_trump;\r\n  var hcc_list = new Set();\r\n\r\n  if (never_trump == 0) {\r\n      for (var key in dx_dct) {\r\n          if (dx_dct.hasOwnProperty(key)) {\r\n              for (var hcc in dx_dct[key]['hccs']) {\r\n                  if (dx_dct[key]['hccs'].hasOwnProperty(hcc)) {\r\n                      if (!(dx_dct[key]['hccs'][hcc].hasOwnProperty(['trumped by']))) {\r\n                        hcc_list.add(hcc);                          \r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      hcc_list = Array.from(hcc_list);\r\n      var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\r\n      hcc_list.sort(collator.compare);\r\n  } else {\r\n    var hcc_list = new Set();\r\n    for (var key in dx_dct) {\r\n        if (dx_dct.hasOwnProperty(key)) { \r\n            for (var hcc in dx_dct[key]['hccs']){\r\n                hcc_list.add(hcc);\r\n            }\r\n        }\r\n    }\r\n    hcc_list = Array.from(hcc_list);\r\n    var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\r\n    hcc_list.sort(collator.compare);\r\n  }\r\n  return hcc_list;\r\n}\r\n\r\nfunction clean_dxlist(dx_list, ver='') {\r\n  // Convert string to list, dedupe, and ensure DX are formatted correctly.\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  var dxmap = default_dxmap[ver];\r\n  var list_dx = [];\r\n  for (var i =0; i < dx_list.length;  i++) {\r\n      if (dx_list[i] != '') {\r\n          list_dx[i] = (String(dx_list[i]).replace('.', '')).toUpperCase();\r\n      }\r\n  }\r\n  if (typeof (list_dx) == 'string') {\r\n      list_dx = list_dx.split(/\\s*,\\s*|\\s+|\\s*;\\s*|\\s*:\\s*/);\r\n  }\r\n  var dx_set = new Set();\r\n  for (var dx = 0; dx < list_dx.length; dx++) {\r\n      if (dxmap.hasOwnProperty(list_dx[dx])) {\r\n          dx_set.add(list_dx[dx]);\r\n      }\r\n  }\r\n  return dx_set;\r\n}\r\n\r\nfunction clean_hcclist(hcc_list, ver='') {\r\n  // Convert string to list, dedupe, and ensure HCC are formatted correctly.\r\n\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  var hcc_map = default_hccmap[ver];\r\n\r\n  if (typeof hcc_list == 'string') {\r\n    hcc_list = hcc_list.split(/\\s*,\\s*|\\s+|\\s*;\\s*|\\s*:\\s*/);\r\n  }\r\n  else if (typeof hcc_list == 'number') {\r\n    hcc_list = [hcc_list];\r\n  }\r\n\r\n  // If you got integers, add the HCC prefix. If strings, make sure they're stripped and uppercase\r\n  var hcc_list_temp = [];\r\n  for (var hcc of hcc_list) {\r\n      if (!isNaN(hcc.toString().trim())) {\r\n          hcc_list_temp.push(\"HCC\" + hcc.toString().trim());\r\n      } else {\r\n          hcc_list_temp.push(hcc.trim().toUpperCase());\r\n      }\r\n  }\r\n  hcc_list = hcc_list_temp;\r\n  //Replacing HCC019 to HCC19\r\n  var hcc_list_temp = [];\r\n  for (var hcc1 of hcc_list) {\r\n      hcc_list_temp.push(hcc1.replace(/HCC0+/, 'HCC'));\r\n  }\r\n  hcc_list = hcc_list_temp;\r\n\r\n  // We want HCC1 rather than HCC001, etc.\r\n  var hcc_set = new Set();\r\n  for (var hcc2 of hcc_list) {\r\n      if (hcc_map.hasOwnProperty(hcc2)) {\r\n          hcc_set.add(hcc2);\r\n      }\r\n  }\r\n  return Array.from(hcc_set);\r\n}\r\n\r\nfunction hcc2raf(hcc_list, ver='', model='', disabl=false, age=0, never_trump=0, baserate=0.0) {\r\n  /*\r\n  Utility for calculating hcc raf for a list of hccs\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n\r\n  var temp_hcc_list = prep_hccs(hcc_list, ver=ver, model=model, age=age, disabl=disabl, never_trump=0);\r\n  var raf = get_raf([], temp_hcc_list, ver=ver, model=model, verbose='', baserate=baserate);\r\n  return raf[\"hcc_score\"];\r\n}\r\n\r\nfunction prep_hccs(hcc_list, ver='', model='', age=0, disabl=false, never_trump=0) {\r\n  /*\r\n  Utility for prepping an HCC list, applying Trumping and Interactions; does not include age/sex interactions\r\n  as they at the DX level\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  never_trump = never_trump || default_never_trump;\r\n  var hccs = trump_hccs(hcc_list, ver=ver, never_trump=never_trump);\r\n  hccs = interactions[ver](hccs, model, disabl, age);\r\n  return hccs;\r\n}\r\n\r\nfunction trump_hccs(hcc_list, ver='', never_trump=0) {\r\n  // Given a list of HCCs and an HCC version, returns a list of HCCs after trumping\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  never_trump = never_trump || default_never_trump;\r\n\r\n  var hccmap = default_hccmap[ver];\r\n\r\n  // Make sure we're getting the right format\r\n  hcc_list_temp = clean_hcclist(hcc_list, ver=ver);\r\n  if (never_trump == 0) {\r\n      var hcc_set = new Set(hcc_list_temp);\r\n      var trumped_set = new Set();\r\n      for (var hcc of hcc_set) {\r\n          if (hcc in hccmap) {\r\n              for (var child of hccmap[hcc]['children']) {\r\n                  trumped_set.add(child);\r\n              }\r\n          }\r\n      }\r\n      var temp_hcc_set = new Set([...hcc_set].filter(x => !trumped_set.has(x)));\r\n      hcc_list_temp = Array.from(temp_hcc_set);\r\n  }\r\n\r\n  var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\r\n  hcc_list_temp.sort(collator.compare);\r\n  return hcc_list_temp;\r\n}\r\n\r\nfunction hcc_dct(hcc_list, ver='', age=0, sex='', verbose=true) {\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  verbose = verbose || default_verbose;\r\n  var hccmap = default_hccmap[ver];\r\n  var unique_hccs = clean_hcclist(hcc_list, ver=ver);\r\n  var got_trumped = {};\r\n  for (var hcc of unique_hccs) {\r\n      for (var child of hccmap[hcc]['children']) {\r\n          got_trumped[child] = hcc;\r\n      }\r\n  }\r\n  var hcc_dct = {};\r\n\r\n  for (var hcc of unique_hccs) {\r\n      if (hccmap.hasOwnProperty(hcc)) {\r\n          hcc_dct[hcc] = JSON.parse(JSON.stringify(hccmap[hcc]))  // Get details for this hcc Code\r\n          delete hcc_dct[hcc]['parents'];\r\n          delete hcc_dct[hcc]['children'];\r\n      } else if (verbose) {\r\n          hcc_dct[hcc] = { \"desc\": \"\", \"parents\": {} };\r\n      }\r\n\r\n  }\r\n\r\n  for (var hcc in hcc_dct) {\r\n      for (var trumped_hcc in got_trumped) {\r\n          if (trumped_hcc == hcc) {  // If we find trumped HCC, replace with note of its demise\r\n              hcc_dct[hcc]['trumped by'] = got_trumped[trumped_hcc];\r\n          }\r\n      }\r\n  }\r\n\r\n  return hcc_dct;\r\n}\r\n\r\nfunction hcc_increment(old_list=[], new_list=[], ver='', model='', age=0, disabl=false, never_trump=0, baserate=0.0) {\r\n  // Utility to identify the incremental HCCs and value of adding a new list HCCs to a base list of HCCs\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n\r\n  var new_hccs = prep_hccs(new_list, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump)\r\n  var old_hccs = prep_hccs(old_list, ver=ver, model=model, age=age, disabl=disabl)\r\n  new_hccs = new_hccs + ','.concat(old_hccs)\r\n  var final_hccs = prep_hccs(new_hccs, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump)\r\n  var diff = hcc_diff(old_hccs, final_hccs, ver=ver, age='', model=model, disabl=disabl, never_trump=never_trump, baserate=baserate)\r\n  diff[\"final_hccs\"] = final_hccs;\r\n  delete diff['downgraded'];\r\n  delete diff['downgrade_to'];\r\n  delete diff['deletes'];\r\n  return diff;\r\n}\r\n\r\nfunction dx_increments(old_list=[], new_list=[], ver='', model='', age=0, disabl=false, never_trump=0, baserate=0.0) {\r\n  // Utility to identify the incremental HCCs and value of adding a new list DXs to a base list of DXs\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || this.default_baserate;\r\n  never_trump = never_trump || this.default_never_trump;\r\n\r\n  var old_hccs = dx2hcc(old_list, age=age, ver=ver, model=model, sex='', disabl=disabl, never_trump=never_trump, verbose='');\r\n  var new_hccs = dx2hcc(new_list, age=age, ver=ver, model=model, sex='', disabl=disabl, never_trump=never_trump, verbose='');\r\n  var diff = hcc_increment(old_hccs, new_hccs, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump, baserate=baserate);\r\n\r\n  var dxinc = {\r\n      \"adds\": Array.from(get_hcc_dx(diff['adds'], clean_dxlist(new_list, ver), ver)),\r\n      \"upgraded\": Array.from(get_hcc_dx(diff[\"upgraded\"], clean_dxlist(old_list, ver), ver)),\r\n  };\r\n  dxinc['raf'] = diff['raf'];\r\n  dxinc['premium'] = diff['premium'];\r\n  return dxinc;\r\n}\r\n\r\nfunction get_hcc_dx(hcc_list, dx_list, ver) {\r\n  // Utility to get the Dx Codes by comparing hcc_list with dx_list\r\n  var dxmap = default_dxmap[ver];\r\n  var hcc_set = new Set(hcc_list);\r\n  var mydx = new Set();\r\n  for (var dx of dx_list) {\r\n      var temp_set = new Set(dxmap[dx]['hccs']);\r\n      var temp = ([...temp_set].filter(x => hcc_set.has(x)));\r\n      if (dxmap.hasOwnProperty(dx) && temp.length) {\r\n          mydx.add(dx);\r\n      }\r\n  }\r\n  return mydx;\r\n}\r\n\r\nfunction dx_diffc(old_list=[], new_list=[], ver='', model='', never_trump=0, baserate=0.0) {\r\n  /*\r\n  Utility to compare HCCs and RAF for two lists of dx codes\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n\r\n  var old_dx = clean_dxlist(old_list, ver);\r\n  var new_dx = clean_dxlist(new_list, ver);\r\n  var old_hccs = dx2hcc(old_list, age='', ver=ver, model=model, sex='', disabl='', never_trump=never_trump, verbose='');\r\n  var new_hccs = dx2hcc(new_list, age='', ver=ver, model=model, sex='', disabl='', never_trump=never_trump, verbose='');\r\n\r\n  var diff = hcc_diff(old_hccs, new_hccs, ver=ver, age='', model=model, disabl='', never_trump=never_trump, baserate=baserate);\r\n  var dxdiff = {\r\n      \"adds\": Array.from(get_hcc_dx(diff['adds'], new_dx, ver)),\r\n      \"upgraded\": Array.from(get_hcc_dx(diff[\"upgraded\"], old_dx, ver)),\r\n      \"downgraded\": Array.from(get_hcc_dx(diff[\"downgraded\"], old_dx, ver)),\r\n      \"downgrade_to\": Array.from(get_hcc_dx(diff[\"downgrade_to\"], new_dx, ver)),\r\n      \"deletes\": Array.from(get_hcc_dx(diff[\"deletes\"], old_dx, ver)),\r\n  }\r\n  dxdiff['raf'] = diff['raf'];\r\n  dxdiff['premium'] = diff['premium'];\r\n  return dxdiff;\r\n}\r\n\r\nfunction hcc_diff(old_list=[], new_list=[], ver='', age=0, model='', disabl=false, never_trump=0, baserate=0.0) {\r\n  /*\r\n  Calculate the changes between two hcc lists, {\"adds\":[], \"upgraded\":[] \"downgraded\":[], \"deletes\":[]}\r\n  - \"adds\" are new HCC Codes (includes upgrades of other codes),\r\n  - \"upgraded\" are codes from base that are no longer relevant due to new codes\r\n  - \"downgraded\" are codes from base that are present at a lower specificity in new\r\n  - \"deletes\" are codes from base that are no longer present at all\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  \r\n  var hccmap = default_hccmap[ver];\r\n  // Prep cleans and trumps the list and add interactions\r\n  var old_set = new Set(prep_hccs(old_list, ver=ver, model=model, age=age, disabl=disabl));\r\n  var new_set = new Set(prep_hccs(new_list, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump));\r\n\r\n  // Find the full set of codes that each set can trump\r\n  var old_children = new Set();\r\n  var new_children = new Set();\r\n  var new_parents = new Set();\r\n  for (var hcc1 of old_set) {\r\n      if (hcc1 in hccmap) {\r\n          for (var child of hccmap[hcc1]['children']) {\r\n              old_children.add(child)\r\n          }\r\n      }\r\n  }\r\n  for (var hcc2 of new_set) {\r\n      if (hcc2 in hccmap) {\r\n          for (var child of hccmap[hcc2]['children']) {\r\n            new_children.add(child)\r\n          }\r\n      }\r\n  }\r\n  for (var hcc3 of new_set) {\r\n      if (hcc3 in hccmap) {\r\n          for (var child of hccmap[hcc3]['parents']) {\r\n            new_parents.add(child)\r\n          }\r\n      }\r\n  }\r\n\r\n  // New HCCs, except where they are trumped by old HCCs (downgrades)\r\n  var new_hccs_temp = new Set([...new_set].filter(x => !old_set.has(x)));\r\n  var new_hccs = new Set([...new_hccs_temp].filter(x => !old_children.has(x)));\r\n  var downgraded_temp = new Set([...old_set].filter(x => !new_set.has(x)));\r\n  var downgraded = new Set([...downgraded_temp].filter(x => new_parents.has(x)));\r\n  var downgrade_to_temp = new Set([...new_set].filter(x => !old_set.has(x)));\r\n  var downgrade_to = new Set([...downgrade_to_temp].filter(x => old_children.has(x)));\r\n  var upgraded = new Set();\r\n  if (never_trump === 1) {\r\n      var prep_hccs_set = new Set(prep_hccs(Array.from(new_set), ver=ver, model=model, age=age, disabl=disabl, never_trump=''));\r\n      var upgraded_temp = new Set([...old_set].filter(x => !prep_hccs_set.has(x)));\r\n      upgraded = ([...upgraded_temp].filter(x => new_children.has(x))); // Noqa E501\r\n  } else {\r\n      var upgraded_temp = new Set([...old_set].filter(x => !new_set.has(x)));\r\n      upgraded = ([...upgraded_temp].filter(x => new_children.has(x)));\r\n  }\r\n  var del_hccs_temp = new Set([...old_set].filter(x => !new_set.has(x)));\r\n  var del_hccs_union = new Set([...upgraded, ...downgraded]);\r\n  var del_hccs = new Set([...del_hccs_temp].filter(x => !del_hccs_union.has(x)));\r\n  var old_raf = hcc2raf(Array.from(old_set), ver=ver, model=model, disabl='', age='', never_trump=never_trump, baserate=baserate);\r\n  var new_raf = hcc2raf(Array.from(new_set), ver=ver, model=model, disabl='', age='', never_trump=never_trump, baserate=baserate);\r\n  var delta_raf = new_raf - old_raf;\r\n  var premium = (delta_raf * baserate).toFixed(2);\r\n  var diff = {\r\n      \"adds\": Array.from(new_hccs),\r\n      \"upgraded\": Array.from(upgraded),\r\n      \"downgraded\": Array.from(downgraded),\r\n      \"downgrade_to\": Array.from(downgrade_to),\r\n      \"deletes\": Array.from(del_hccs),\r\n      \"raf\": delta_raf,\r\n      \"premium\": premium\r\n  }\r\n  return diff;\r\n}\r\n\r\nfunction member(condition_list, age=65, sex='M', model='', orec='0', ver='', baserate=0.0) {\r\n  /*\r\n      Builds an HCC risk score for a Medicare Advantage member given demographic and disease factors\r\n      :param dx_list: list of str\r\n                      List of DX codes; case and decimal insensitive\r\n      :param age: float\r\n                  Age of member\r\n      :param sex: str\r\n                  Gender of Member: Accepts \"M\"/\"F\", \"Male\"/\"Female\" or CMS numerical codes 1/2\r\n      :param model: str\r\n                  HCC Model to be used for member. Accepts:\r\n                      \"CNA\": Community - Non-dual aged\r\n                      \"CND\": Community - Non-dual disabled\r\n                      \"CFA\": Community - Full Benefit dual aged\r\n                      \"CFD\": Community - Full Benefit dual disabled\r\n                      \"CPA\": Community - Partial Benefit dual aged\r\n                      \"CPD\": Community - Partial Benefit dual disabled\r\n                      \"INS\": Institutional\r\n                      \"NE\": New enrollee\r\n                      \"SNPNE\": C-SNP new enrolee\r\n      :param orec: str\r\n                  Original Reason for Entitlement:\r\n                      \"0\": Old age (OASI)\r\n                      \"1\": Disability (DIB)\r\n                      \"2\": End Stage Renal Disease (ESRD)\r\n                      \"3\": Both DIB and ESRD\r\n\r\n      :param ver: str\r\n                  Version of HCC Model to be used (overrides default version set in Ccalc).\r\n                  Accepts {'v22', 'v23', 'v24'}\r\n      :return: dict\r\n              Map of factors and risk scores for member\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  var verbose = default_verbose;\r\n  var hccmap = default_hccmap[ver];\r\n  \r\n  // Get age/sex/disability demographic codes\r\n  var disabl = model.endsWith(\"D\");\r\n  var demo_codes = agesex(age, sex, orec, model);\r\n\r\n  // Condition resolver to get the condition list as either Dx or HCC\r\n  var cond_dict = condition_resolver(condition_list, ver=ver, model=model, never_trump='', allhcc='');\r\n  var condition = cond_dict['condition'];\r\n  var allhcc = cond_dict['allhcc'];  \r\n  var flag;\r\n  var raf;\r\n  var dx_dct;\r\n\r\n  if (allhcc == 1) {\r\n      var dx_dct = hcc_dct(condition, ver=ver, age=age, sex=sex, verbose=verbose);\r\n      var unique_hccs = prep_hccs(condition, ver=ver, model=model, age=age, disabl='', never_trump='');\r\n      unique_hccs = interactions[ver](unique_hccs, model, disabl, age);\r\n      raf = get_raf(demo_codes, unique_hccs, ver=ver, model=model, verbose='', baserate=baserate);\r\n      flag = 'hcc';\r\n      var dx_hcc = [];\r\n      // Update the dictionary with interaction codes and desc as Interaction Codes\r\n      for (var hcc of unique_hccs) {\r\n        if (!(hcc in dx_dct)) {\r\n          dx_dct.set(hcc, \"{'desc': 'Interaction Codes'}\");\r\n        }\r\n      }\r\n\r\n      // Appending dictionary to the json format\r\n      for (var hcc in dx_dct) {\r\n        var dic_dxlist = {};\r\n        dic_dxlist['dx_name'] = None;\r\n        dic_dxlist['dx_desc'] = None;\r\n        var temp_dict = {};\r\n        temp_dict[hcc] = dx_dct[hcc];\r\n        var hcc_list = mem_out_wrapper(dict1=temp_dict, raf=raf['hcc_detail'], baserate=baserate);\r\n        dic_dxlist['hcc_list'] = hcc_list;\r\n        dx_hcc.push(dic_dxlist);\r\n      }      \r\n  } else {\r\n      // process DX list\r\n      dx_dct = dx_hccs(condition, ver=ver, age=age, sex=sex, verbose=verbose);\r\n      var unique_hccs = dxdct_hccs(dx_dct, never_trump='');\r\n      unique_hccs = interactions[ver](unique_hccs, model, disabl, age);\r\n      raf = get_raf(demo_codes, unique_hccs, ver=ver, model=model, verbose='', baserate=baserate);\r\n      flag = 'dx';\r\n      dx_hcc = [];\r\n      // Appending dictionary to the json format\r\n      for (var dx in dx_dct) {\r\n        var dic_dxlist = {};\r\n        dic_dxlist['dx_name'] = dx;  // Get details for this DX Code\r\n        dic_dxlist['dx_desc'] = dx_dct[dx]['desc'];\r\n        var hcc_list = mem_out_wrapper(raf=raf['hcc_detail'], dict1=dx_dct[dx]['hccs'], baserate=baserate)\r\n        dic_dxlist['hcc_list'] = hcc_list;\r\n        dx_hcc.push(dic_dxlist);\r\n      }          \r\n\r\n      // Appending interaction codes to the dictionary\r\n      for (var hcc of unique_hccs) {\r\n        if (!(hcc in hccmap)) {\r\n          var dic_dxlist = {};\r\n          dic_dxlist['dx_name'] = None; // Get details for this DX Code\r\n          dic_dxlist['dx_desc'] = None;\r\n          dic_hcclist = {};\r\n          dic_hcclist['hcc_name'] = hcc;\r\n          dic_hcclist['hcc_desc'] = 'Interaction Codes';\r\n          dic_hcclist['trumped_by'] = [];\r\n          dic_hcclist['hcc_raf'] = raf['hcc_detail'][hcc];\r\n          dic_hcclist['premium'] = Math.round(dic_hcclist['hcc_raf'] * baserate);\r\n          hcc_list = [];\r\n          hcc_list.push(dic_hcclist);\r\n          dic_dxlist['hcc_list'] = hcc_list;\r\n          dx_hcc.push(dic_dxlist);\r\n        }        \r\n      }\r\n  }\r\n\r\n  return {\r\n      \"hcc_model\": { \"version\": ver, \"model\": model },\r\n      \"demo\": { \"age\": age, \"sex\": sex, \"orec\": orec },\r\n      \"raf\": raf,\r\n      'flag': flag,\r\n      \"dx_hccs\": dx_dct\r\n  }\r\n}\r\n\r\nfunction mem_out_wrapper(raf, baserate, dict1={}) {\r\n  // Utility to convert dictionary output to desired format\r\n  hcc_list = [];\r\n  for (var hcc in dict1) {\r\n    var dic_hcclist = {};\r\n    dic_hcclist['hcc_name'] = hcc;\r\n    dic_hcclist['hcc_desc'] = dict1[hcc]['desc'];\r\n    dic_hcclist['trumped_by'] = [];\r\n    if ('trumped by' in dict1[hcc]) {\r\n        dic_hcclist['trumped_by'] = dict1[hcc]['trumped by'].split();\r\n        dic_hcclist['hcc_raf'] = None;\r\n        dic_hcclist['premium'] = None;\r\n    } else {\r\n        dic_hcclist['hcc_raf'] = raf[hcc];\r\n        dic_hcclist['premium'] = Math.round(dic_hcclist['hcc_raf'] * baserate);\r\n    }\r\n    hcc_list.push(dic_hcclist);\r\n  }\r\n  return hcc_list;\r\n}\r\n\r\nfunction condition_resolver(conditionlist, ver='', model='', never_trump=0, allhcc=0) {\r\n  /*\r\n  Utility to convert the condition list to one: either Dx or HCC\r\n  returns dict of:\r\n      'condition': list of Dx/HCC based on the input\r\n      'allhcc' : boolean,\r\n                 Provides whether all were Dx or we converted them to HCC\r\n  */\r\n\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  never_trump = never_trump || default_never_trump;\r\n\r\n  var list_hcc = [];\r\n  for (item in conditionlist) {\r\n    if (Number.isInteger(item) || item.startsWith('HCC')){\r\n      list_hcc.push(item);\r\n    }\r\n  }\r\n  var list_dx = [];\r\n  var list_dx_clean = [];\r\n  var dct = new Set();\r\n  if ((list_hcc.length > 0) || allhcc) {\r\n      allhcc = 1;\r\n      list_dx = conditionlist.filter(item => !(list_hcc.includes(item)));\r\n      list_dx_clean = clean_dxlist(list_dx, ver);\r\n      var hccs = dx2hcc(list_dx_clean, age='', ver=ver, model=model, sex='', disabl='', never_trump=never_trump, verbose='');\r\n      var combined_hccs = list_hcc.concat(hccs);\r\n      dct = { 'allhcc': allhcc, 'condition': combined_hccs };\r\n\r\n  } else {\r\n      list_dx = conditionlist;\r\n      dct = { 'allhcc': allhcc, 'condition': list_dx };\r\n  }\r\n  return dct;\r\n}\r\n\r\nfunction agesex_edits(dx_dct, age, sex) { // noqa C901\r\n  /*\r\n  Edits DX List for a beneficiary based on AGE/SEX (From CMS I0V05ED2.TXT)\r\n  Valid for V22, V23, V24\r\n  :param dx_dct: dict\r\n                 Dict of {DX:HCC}\r\n  :param age: float\r\n              Age of member\r\n  :param sex: str\r\n              Member's gender\r\n  :return: dx_dct: dict\r\n              Dictionary of {DX:HCC} edited per member age/sex rules\r\n  */\r\n  var ed_leukemia = [\"C9100\", \"C9101\", \"C9102\", \"C9500\", \"C9501\", \"C9502\",\r\n      \"C7400\", \"C7401\", \"C7402\", \"C7410\", \"C7411\", \"C7412\",\r\n      \"C7490\", \"C7491\", \"C7492\"];\r\n\r\n  var ed_bronchitis = [\"J410\", \"J411\", \"J418\", \"J42\", \"J440\", \"J441\"];\r\n\r\n  var ed_vasc_insf = [\"K55011\", \"K55012\", \"K55019\", \"K55021\", \"K55022\",\r\n      \"K55029\", \"K55031\", \"K55032\", \"K55039\", \"K55041\", \"K55042\",\r\n      \"K55049\", \"K55051\", \"K55052\", \"K55059\", \"K55061\", \"K55062\",\r\n      \"K55069\", \"K5530\", \"K5531\", \"K5532\", \"K5533\"];\r\n\r\n  var ed_emphysema = [\"J430\", \"J431\", \"J432\", \"J438\", \"J439\", \"J449\", \"J982\", \"J983\"];\r\n\r\n  var ed_breastca = [\"C50011\", \"C50012\", \"C50019\", \"C50021\", \"C50022\", \"C50029\",\r\n      \"C50111\", \"C50112\", \"C50119\", \"C50121\", \"C50122\", \"C50129\",\r\n      \"C50211\", \"C50212\", \"C50219\", \"C50221\", \"C50222\", \"C50229\",\r\n      \"C50311\", \"C50312\", \"C50319\", \"C50321\", \"C50322\", \"C50329\",\r\n      \"C50411\", \"C50412\", \"C50419\", \"C50421\", \"C50422\", \"C50429\",\r\n      \"C50511\", \"C50512\", \"C50519\", \"C50521\", \"C50522\", \"C50529\",\r\n      \"C50611\", \"C50612\", \"C50619\", \"C50621\", \"C50622\", \"C50629\",\r\n      \"C50811\", \"C50812\", \"C50819\", \"C50821\", \"C50822\", \"C50829\",\r\n      \"C50911\", \"C50912\", \"C50919\", \"C50921\", \"C50922\", \"C50929\"];\r\n\r\n  var ed_low_bw = [\"P0500\", \"P0501\", \"P0502\", \"P0503\", \"P0504\", \"P0505\",\r\n      \"P0506\", \"P0507\", \"P0508\", \"P0509\", \"P0510\", \"P0511\",\r\n      \"P0512\", \"P0513\", \"P0514\", \"P0515\", \"P0516\", \"P0517\",\r\n      \"P0518\", \"P0519\", \"P052\", \"P059\", \"P0700\", \"P0701\",\r\n      \"P0702\", \"P0703\", \"P0710\", \"P0714\", \"P0715\", \"P0716\",\r\n      \"P0717\", \"P0718\", \"P0720\", \"P0721\", \"P0722\", \"P0723\",\r\n      \"P0724\", \"P0725\", \"P0726\", \"P0730\", \"P0731\", \"P0732\",\r\n      \"P0733\", \"P0734\", \"P0735\", \"P0736\", \"P0737\", \"P0738\",\r\n      \"P0739\", \"P080\", \"P081\", \"P0821\", \"P0822\"];\r\n\r\n  var ed_conjoined = [\"Q894\"];\r\n\r\n  var ed_newbn_substance = [\"K551\", \"K558\", \"K559\",\r\n      \"P041\", \"P0411\", \"P0412\", \"P0413\", \"P0414\", \"P0415\",\r\n      \"P0416\", \"P0417\", \"P0418\", \"P0419\", \"P041A\",\r\n      \"P042\", \"P043\", \"P0440\", \"P0441\", \"P0442\", \"P0449\",\r\n      \"P045\", \"P046\", \"P048\", \"P0481\", \"P0489\",\r\n      \"P049\", \"P930\", \"P938\", \"P961\", \"P962\",\r\n      \"Q390\", \"Q391\", \"Q392\", \"Q393\", \"Q394\", \"Q6410\",\r\n      \"Q6411\", \"Q6412\", \"Q6419\", \"Q790\", \"Q791\", \"Q792\",\r\n      \"Q793\", \"Q794\", \"Q7951\"];\r\n\r\n  var ed_chron_resp = [\"P270\", \"P271\", \"P278\", \"P279\"];\r\n\r\n  var ed_disruptive_mood = [\"F3481\"];\r\n\r\n  var ed_hemophilia = [\"D66\", \"D67\"];\r\n\r\n  // Optimal to have the loop outside of the age checks, but this is easier to read\r\n  for (var dx in dx_dct) {\r\n\r\n      // Split acute lymphoid and other acute leukemias, except  myeloid diagnoses to age 18+ (HCC 8)\r\n      // and age <18 (HCC 9). Split adrenal gland cancer diagnoses to age 18+ (HCC 10) and age <18 (HCC 9).\r\n      if (age < 18 && ed_leukemia.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC9\"]);\r\n      }\r\n\r\n      // Split chronic bronchitis diagnoses to age 18+ (HCC 160) and age <18 (HCC 161)\r\n      if (age < 18 && ed_bronchitis.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC161\"]);\r\n      }\r\n\r\n      // Split acute vascular insufficiency of intestine diagnosis to age 2+ (HCC 154) and age <2 (HCC 42)\r\n      if (age < 2 && ed_vasc_insf.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = [(\"HCC42\")];\r\n      }\r\n\r\n      // Split breast cancer diagnoses to age 50+ (HCC 12) and age <50 (HCC 11)\r\n      if (age < 50 && ed_breastca.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC11\"]);\r\n      }\r\n\r\n      // Split emphysema diagnoses to age 18+ (HCC 160) and age 2-17 (HCC160; split not needed in HHS model).\r\n      // If age <2 out of payment model\r\n      if (age < 2 && ed_emphysema.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC1\"]);\r\n      }\r\n\r\n      // Edit for newborn low birthweight. If age 1+ out of payment model\r\n      if (age != 0 && ed_low_bw.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC1\"]);\r\n      }\r\n\r\n      // Split conjoined twins diagnoses to age 1+ (HCC 97) and age <1 (HCC 247)\r\n      if (age >= 1 && ed_conjoined.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC97\"]);\r\n      }\r\n\r\n      // Neonatal effects of maternal drug abuse: If age 2+ out of payment model\r\n      if (age >= 2 && ed_newbn_substance.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC1\"]);\r\n      }\r\n\r\n      // Split chronic respiratory disease arising in the perinatal period diagnoses to age 2+\r\n      // (HCC 162) and age <2 (HCC 127).\r\n      if (age >= 2 && ed_chron_resp.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC162\"]);\r\n      }\r\n\r\n      // Mood disorder: Edit for targeted age of diagnosis. If age <6 or age >18 out of payment model.\r\n      if (age < 6 || age > 18 && ed_disruptive_mood.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC1\"]);\r\n      }\r\n\r\n      // Split hemophilia diagnoses to male (HCC 66 if age <65 or HCC 66 if age 65+; age split not needed in HHS model)\r\n      //  and female (HCC 75)\r\n      female_sex = [\"2\", \"F\", \"Female\"];\r\n      if (female_sex.includes(sex) && ed_hemophilia.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC75\"]);\r\n      }\r\n  }\r\n\r\n  edit_dct = {};  // Build new dict after filtering out all HCCs edited out\r\n  for (dx in dx_dct) {\r\n      if (dx_dct[dx]['hccs'] != ([\"HCC1\"])) {\r\n          edit_dct[dx] = dx_dct[dx];\r\n      }\r\n  }\r\n\r\n  return edit_dct;\r\n}\r\n\r\nfunction get_raf(demo_lst, hcc_lst, ver='', model='', verbose=true, baserate=0.0) {\r\n  /*\r\n  Look up demographic and hcc RAF for a member given codes. IMPORTANT: ASSUMES HCCs are already clean and deduped\r\n  and hierarchy. Based on CMS V2218O1P.TXT.  Returns a dict of risk scores in the format:\r\n  {\r\n      raf: float of total risk factor,\r\n      premium: PM PM payment for members of this raf and base rate($)\r\n      demo_raf: float of demographic risk factor\r\n      hcc_raf: float of hcc risk factor\r\n      demo_detail: dict of {demographic_code: demo_raf} for each demographic code in list\r\n      hcc_defail: dict of {hcc_code: hcc:raf} for each hcc code in list\r\n  :param model: str\r\n                  Hcc model for use\r\n  :param demo_lst: list of str\r\n                  List of applicable demographic codes for a member (eg CNA_F65_70)\r\n  :param hcc_lst: list of str\r\n                  List of hccs (assumes hccs have already been trumped)\r\n  :param ver: str\r\n                  Optional HCC version to be used in calculation\r\n  :param model: str\r\n          Optional HCC model to be used in calculation\r\n  :param verbose: bool\r\n  :param baserate: float\r\n                  pmpm premium base rate\r\n  :return: dict\r\n          raf_dct\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  verbose = verbose || default_verbose;\r\n\r\n  var hcccoefn = default_hcccoefn[ver];\r\n  var demo_detail = {};\r\n  var hcc_detail = {};\r\n  var demo_raf = 0.0;\r\n  var hcc_raf = 0.0;\r\n\r\n  for (var demo of demo_lst) {\r\n      if (hcccoefn.hasOwnProperty(demo)) {\r\n          demo_detail[demo] = hcccoefn[demo];\r\n          demo_raf += hcccoefn[demo];\r\n      }\r\n  }\r\n\r\n  for (var hcc = 0; hcc < hcc_lst.length; hcc++) {\r\n      var label = model + \"_\" + hcc_lst[hcc];\r\n      if (label in hcccoefn) {\r\n          hcc_detail[hcc] = hcccoefn[label];\r\n          hcc_raf += hcccoefn[label];\r\n      } else if (verbose) {\r\n          hcc_detail[hcc] = 0.0;\r\n      }\r\n  }\r\n\r\n  var score = (demo_raf + hcc_raf).toFixed(4);\r\n  var raf_dct = {\r\n      \"score\": score,\r\n      \"premium\": (score * baserate).toFixed(),\r\n      \"demo_score\": (demo_raf).toFixed(4),\r\n      \"hcc_score\": (hcc_raf).toFixed(4),\r\n      \"demo_detail\": demo_detail,\r\n      \"hcc_detail\": hcc_detail\r\n  };\r\n  return raf_dct;\r\n}\r\n\r\nfunction agesex(age, sex, orec, model) {\r\n  /*\r\n      Create demographic variables used in regressions, from CMS SAS macro AGESEXV2\r\n      Valid for V22, V23, V24\r\n      :param age: float\r\n                  Age of beneficiary\r\n      :param sex: str\r\n                  Gender of beneficiary\r\n      :param orec: str\r\n                  Original reason for enrollment\r\n      :param model: str\r\n                  Code for CMS model (str)\r\n      :return: list of str\r\n              list of demographic str for looking up demo coefficients\r\n  */\r\n  let age_maps = {\r\n      \"STD\": [\"0_34\", \"35_44\", \"45_54\", \"55_59\", \"60_64\", \"65_69\", \"70_74\", \"75_79\",\r\n          \"80_84\", \"85_89\", \"90_94\", \"95_GT\"],\r\n      \"NE\": [\"0_34\", \"35_44\", \"45_54\", \"55_59\", \"60_64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"70_74\", \"75_79\",\r\n          \"80_84\", \"85_89\", \"90_94\", \"95_GT\"]\r\n  };\r\n\r\n  age = Math.trunc(age);  // In case float is passed and someone at upper age bound\r\n\r\n  let demo_str;\r\n  let male_sex = [\"M\", \"MALE\", \"1\"];\r\n  if (male_sex.includes(sex.toUpperCase())) {\r\n      demo_str = 'M';\r\n  } else {\r\n      demo_str = \"F\";\r\n  }\r\n\r\n  // Directly from CMS AGESEXV2\r\n  let disabl = (age < 65) && (orec != \"0\");\r\n  let origds = (orec == \"1\") && !(disabl);\r\n  let medicaid;\r\n  let medicaid_condition = [\"CP\", \"CF\"];\r\n  if (medicaid_condition.includes(model)) {\r\n      medicaid = true;\r\n  } else {\r\n      medicaid = false;\r\n  }\r\n  let new_enrolee = model.endsWith(\"NE\");\r\n  let age_labels = [];\r\n  if (new_enrolee) {\r\n      age_labels = age_maps[\"NE\"];\r\n  } else {\r\n      age_labels = age_maps[\"STD\"];\r\n  }\r\n\r\n  // Derive the lower bound & upper bound of each age band from ordered list of age labels\r\n  let age_lower_bounds = [];\r\n  let age_upper_bounds = [];\r\n  for (let i in age_labels) {\r\n      let split = age_labels[i].split(\"_\");\r\n      age_lower_bounds.push(split[0]);\r\n      age_upper_bounds.push(split[1]);\r\n  }\r\n\r\n  for (var [index, lower_bound] of age_lower_bounds.entries()) {\r\n      if (index == age_lower_bounds[age_lower_bounds.length] - 1) {\r\n          demo_str += age_labels[index];\r\n          break;\r\n      }\r\n      if ((lower_bound <= age) && (age < age_lower_bounds[index + 1])) {\r\n          demo_str += age_labels[index];\r\n          break;\r\n      }\r\n  }\r\n\r\n  if (model.endsWith(\"NE\")) {\r\n      if (medicaid) {\r\n          let mcaid_flag = \"\";\r\n      } else {\r\n          mcaid_flag = \"N\";\r\n      }\r\n      if (origds) {\r\n          let origds_flag = \"\";\r\n      } else {\r\n          origds_flag = \"N\";\r\n      }\r\n      demo_str = mcaid_flag + \"MCAID_\" + origds_flag + \"ORIGDIS_NE\" + demo_str;\r\n  }\r\n\r\n  let demo_lst = [model + \"_\" + demo_str];\r\n  let model_type = [\"CNA\", \"CFA\", \"CPA\"];\r\n  let ds_str;\r\n  let sex_type;\r\n\r\n  if ((model_type.includes(model)) && origds) {\r\n      if (sex === \"M\") {\r\n          sex_type = \"Male\";\r\n      } else {\r\n          sex_type = \"Female\";\r\n      }\r\n      ds_str = model + \"_OriginallyDisabled_\" + sex_type;\r\n      demo_lst.push(ds_str);\r\n  }\r\n  return demo_lst;\r\n}\r\n\r\nfunction v22_interactions(ccs, model, disabl=false, age='') {\r\n  /*\r\n  Calculated interaction HCCs given a list of hccs, age, and disability flag\r\n  :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\r\n  :param disabl: CMS disabled flag\r\n  :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\r\n  :return: List of HCC codes, including interaction codes\r\n  */\r\n  var cc_set = new Set(ccs);\r\n  var int_hccs = {};\r\n\r\n  // diagnostic categories\r\n\r\n  var diag_cats = {\r\n      \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\r\n      \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\r\n      \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\r\n      \"CHF\": new Set([\"HCC85\"]),\r\n      \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\r\n      \"RENAL\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\"]),\r\n      \"SEPSIS\": new Set([\"HCC2\"]),\r\n      \"gSubstanceAbuse\": new Set([\"HCC54\", \"HCC55\"]),\r\n      \"gPsychiatric\": new Set([\"HCC57\", \"HCC58\"])\r\n  };\r\n\r\n  var my_dcs = {};\r\n\r\n  for (var key in diag_cats) {\r\n      if (diag_cats.hasOwnProperty(key)) {\r\n          var key_set = new Set(diag_cats[key])\r\n          var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\r\n          my_dcs[key] = new_values;\r\n      }\r\n  \r\n  }\r\n  // Community Interactions\r\n  var arry1 = ['CNA', 'CFA', 'CPA', 'CND', 'CFD', 'CPD'];\r\n  if (arry1.includes(model)) {\r\n    var hcc85_set = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n    var hcc47_set = new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\r\n    var hcc96_set = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\r\n\r\n    if ( my_dcs[\"CANCER\"].size && hcc47_set.size) {\r\n      int_hccs[\"HCC47_gCancer\"] = hcc47_set;\r\n    }else {\r\n      int_hccs[\"HCC47_gCancer\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"DIABETES\"].size && hcc85_set.size) {\r\n        int_hccs[\"HCC85_gDiabetesMellit\"] = hcc85_set;\r\n    }else {\r\n      int_hccs[\"HCC85_gDiabetesMellit\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"gCopdCF\"].size && hcc85_set.size) {\r\n        int_hccs[\"HCC85_gCopdCF\"] = hcc85_set;\r\n    }else {\r\n      int_hccs[\"HCC85_gCopdCF\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"RENAL\"].size && hcc85_set.size) {\r\n        int_hccs[\"HCC85_gRenal_V23\"] = hcc85_set;\r\n    }else {\r\n      int_hccs[\"HCC85_gRenal_V23\"] = new Set();\r\n    }\r\n    if (my_dcs[\"gCopdCF\"].size && my_dcs[\"CARD_RESP_FAIL\"].size) {\r\n      int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"CARD_RESP_FAIL\"];\r\n    }else {\r\n      int_hccs[\"gRespDepandArre_gCopdCF\"] = new Set();\r\n    }\r\n    if (hcc96_set.size && hcc85_set.size) {\r\n      int_hccs[\"HCC85_HCC96\"] = hcc96_set;\r\n    }else {\r\n      int_hccs[\"HCC85_HCC96\"] = new Set();\r\n    }\r\n    if (my_dcs[\"gPsychiatric\"].size && my_dcs[\"gSubstanceAbuse\"].size) {\r\n      int_hccs[\"gSubstanceAbuse_gPsychiatric\"] =  my_dcs[\"gSubstanceAbuse\"];\r\n    }else {\r\n      int_hccs[\"gSubstanceAbuse_gPsychiatric\"] = new Set();\r\n    }\r\n  }\r\n\r\n  // institutional model interactions\r\n  var arry2 = ['INS'];\r\n  if (arry2.includes(model)) {\r\n    var hcc188_set = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\r\n    var hcc114_set = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\r\n    var hcc57_set = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x)));\r\n    var hcc79_set = new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\r\n    \r\n    int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\r\n    if (my_dcs[\"CHF\"].size && my_dcs[\"gCopdCF\"].size) {\r\n      int_hccs[\"CHF_gCopdCF\"] =  my_dcs[\"gCopdCF\"];\r\n    }else {\r\n      int_hccs[\"CHF_gCopdCF\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"CARD_RESP_FAIL\"].size && my_dcs[\"gCopdCF\"].size) {\r\n      int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] =  my_dcs[\"CARD_RESP_FAIL\"];\r\n    }else {\r\n      int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"SEPSIS\"].size && int_hccs[\"PRESSURE_ULCER\"].size) {\r\n      int_hccs[\"SEPSIS_PRESSURE_ULCER\"] =  int_hccs[\"PRESSURE_ULCER\"];\r\n    }else {\r\n      int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = new Set();\r\n    }\r\n\r\n\r\n    if (my_dcs[\"SEPSIS\"].size && hcc188_set.size) {\r\n      int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = hcc188_set;\r\n    }else {\r\n      int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = new Set();\r\n    }\r\n\r\n    if (int_hccs[\"PRESSURE_ULCER\"].size && hcc188_set.size) {\r\n      int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n    }else {\r\n      int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"DIABETES\"].size && my_dcs[\"CHF\"].size) {\r\n      int_hccs[\"DIABETES_CHF\"] = my_dcs[\"CHF\"];\r\n    }else {\r\n      int_hccs[\"DIABETES_CHF\"] = new Set();\r\n    }\r\n\r\n\r\n    if (my_dcs[\"gCopdCF\"].size && hcc114_set.size) {\r\n      int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = hcc114_set;\r\n    }else {\r\n      int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = new Set();\r\n    }\r\n\r\n    if (int_hccs[\"PRESSURE_ULCER\"].size && hcc114_set.size) {\r\n      int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n    }else {\r\n      int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set();\r\n    }\r\n\r\n\r\n    if (my_dcs[\"SEPSIS\"].size && hcc114_set.size) {\r\n      int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = hcc114_set;\r\n    }else {\r\n      int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"gCopdCF\"].size && hcc57_set.size) {\r\n      int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = my_dcs[\"gCopdCF\"];\r\n    }else {\r\n      int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set();\r\n    }\r\n    if (my_dcs[\"CHF\"].size && hcc57_set.size) {\r\n      int_hccs[\"SCHIZOPHRENIA_CHF\"] = my_dcs[\"CHF\"];\r\n    }else {\r\n      int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set();\r\n    }\r\n    if (hcc79_set.size && hcc57_set.size) {\r\n      int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = hcc79_set;\r\n    }else {\r\n      int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set();\r\n    }\r\n  }\r\n\r\n  if (disabl === true || disabl == 1) {\r\n      int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n      if (\"PRESSURE_ULCER\" in int_hccs) {\r\n        int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n      }      \r\n      int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\r\n      int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\r\n      int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\r\n      int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\r\n\r\n      if (typeof age !== 'undefined' && age < 65) {\r\n          int_hccs[\"disable_substAbuse_psych_V23\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric\"]\r\n      }\r\n  }\r\n\r\n  var int_hccs_new = [];\r\n  for (var key in int_hccs) {\r\n     if (int_hccs.hasOwnProperty(key)) {\r\n          if (int_hccs[key].size !== 0) {\r\n              int_hccs_new.push(key);\r\n          }\r\n      }\r\n  }\r\n  return ccs.concat(int_hccs_new)\r\n}\r\n\r\nfunction v23_interactions(ccs, model, disabl=false, age='') {\r\n  /*\r\n  Calculated interaction HCCs given a dict of hccs, age, and disability flag\r\n  :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\r\n  :param disabl: CMS disabled flag\r\n  :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\r\n  :return: List of HCC codes, including interaction codes\r\n  */\r\n  var cc_set = new Set(ccs);\r\n  var int_hccs = {};\r\n\r\n  // diagnostic categories\r\n\r\n  var diag_cats = {\r\n      \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\r\n      \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\r\n      \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\r\n      \"CHF\": new Set([\"HCC85\"]),\r\n      \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\r\n      \"RENAL_V23\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\",\"HCC138\"]),\r\n      \"SEPSIS\": new Set([\"HCC2\"]),\r\n      \"gSubstanceAbuse_V23\": new Set([\"HCC54\", \"HCC55\",\"HCC56\"]),\r\n      \"gPsychiatric_V23\": new Set([\"HCC57\", \"HCC58\",\"HCC59\", \"HCC60\"])\r\n  };\r\n\r\n  var my_dcs = {};\r\n\r\n  for (var key in diag_cats) {\r\n      if (diag_cats.hasOwnProperty(key)) {\r\n          var key_set = new Set(diag_cats[key])\r\n          var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\r\n          my_dcs[key] = new_values;\r\n      }\r\n  \r\n  }\r\n  // Community Interactions\r\n  var arry1 = ['CNA', 'CFA', 'CPA', 'CND', 'CFD', 'CPD'];\r\n  if (arry1.includes(model)) {\r\n    var hcc85_set = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n    var hcc47_set = new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\r\n    var hcc96_set = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\r\n    \r\n    if ( my_dcs[\"CANCER\"].size && hcc47_set.size) {\r\n        int_hccs[\"HCC47_gCancer\"] = hcc47_set;\r\n    }else {\r\n      int_hccs[\"HCC47_gCancer\"] = new Set();\r\n    }\r\n    \r\n    if (my_dcs[\"DIABETES\"].size && hcc85_set.size) {\r\n        int_hccs[\"HCC85_gDiabetesMellit\"] = hcc85_set;\r\n    }else {\r\n      int_hccs[\"HCC85_gDiabetesMellit\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"gCopdCF\"].size && hcc85_set.size) {\r\n        int_hccs[\"HCC85_gCopdCF\"] = hcc85_set;\r\n    }else {\r\n      int_hccs[\"HCC85_gCopdCF\"] = new Set();\r\n    }\r\n    \r\n    if ( my_dcs[\"RENAL_V23\"].size && hcc85_set.size) {\r\n        int_hccs[\"HCC85_gRenal_V23\"] = hcc85_set;\r\n    }else {\r\n      int_hccs[\"HCC85_gRenal_V23\"] = new Set();\r\n    }\r\n    if (my_dcs[\"gCopdCF\"].size && my_dcs[\"CARD_RESP_FAIL\"].size) {\r\n      int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"CARD_RESP_FAIL\"];\r\n    }else {\r\n      int_hccs[\"gRespDepandArre_gCopdCF\"] = new Set();\r\n    }\r\n    if (hcc96_set.size && hcc85_set.size) {\r\n      int_hccs[\"HCC85_HCC96\"] = hcc96_set;\r\n    }else {\r\n      int_hccs[\"HCC85_HCC96\"] = new Set();\r\n    }\r\n    if (my_dcs[\"gPsychiatric_V23\"].size && my_dcs[\"gSubstanceAbuse_V23\"].size) {\r\n      int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"] =  my_dcs[\"gSubstanceAbuse_V23\"];\r\n    }else {\r\n      int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"] = new Set();\r\n    }\r\n  }\r\n\r\n  // institutional model interactions\r\n  var arry2 = ['INS'];\r\n  if (arry2.includes(model)) {\r\n    var hcc188_set = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\r\n    var hcc114_set = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\r\n    var hcc57_set = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x)));\r\n    var hcc79_set = new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\r\n    if (my_dcs[\"CHF\"].size && my_dcs[\"gCopdCF\"].size) {\r\n      int_hccs[\"CHF_gCopdCF\"] =  my_dcs[\"gCopdCF\"];\r\n    }else {\r\n      int_hccs[\"CHF_gCopdCF\"] = new Set();\r\n    }\r\n    if (my_dcs[\"CARD_RESP_FAIL\"].size && my_dcs[\"gCopdCF\"].size) {\r\n      int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] =  my_dcs[\"CARD_RESP_FAIL\"];\r\n    }else {\r\n      int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] = new Set();\r\n    }\r\n    if (my_dcs[\"SEPSIS\"].size && int_hccs[\"PRESSURE_ULCER\"].size) {\r\n      int_hccs[\"SEPSIS_PRESSURE_ULCER\"] =  int_hccs[\"PRESSURE_ULCER\"];\r\n    }else {\r\n      int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = new Set();\r\n    }\r\n    if (my_dcs[\"SEPSIS\"].size && hcc188_set.size) {\r\n      int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = hcc188_set;\r\n    }else {\r\n      int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = new Set();\r\n    }\r\n    if (int_hccs[\"PRESSURE_ULCER\"].size && hcc188_set.size) {\r\n      int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n    }else {\r\n      int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set();\r\n    }\r\n    if (my_dcs[\"DIABETES\"].size && my_dcs[\"CHF\"].size) {\r\n      int_hccs[\"DIABETES_CHF\"] = my_dcs[\"CHF\"];\r\n    }else {\r\n      int_hccs[\"DIABETES_CHF\"] = new Set();\r\n    }\r\n    if (my_dcs[\"gCopdCF\"].size && hcc114_set.size) {\r\n      int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = hcc114_set;\r\n    }else {\r\n      int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = new Set();\r\n    }\r\n    if (int_hccs[\"PRESSURE_ULCER\"].size && hcc114_set.size) {\r\n      int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n    }else {\r\n      int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set();\r\n    }\r\n    if (my_dcs[\"SEPSIS\"].size && hcc114_set.size) {\r\n      int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = hcc114_set;\r\n    }else {\r\n      int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = new Set();\r\n    }\r\n    if (my_dcs[\"gCopdCF\"].size && hcc57_set.size) {\r\n      int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = my_dcs[\"gCopdCF\"];\r\n    }else {\r\n      int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set();\r\n    }\r\n    if (my_dcs[\"CHF\"].size && hcc57_set.size) {\r\n      int_hccs[\"SCHIZOPHRENIA_CHF\"] = my_dcs[\"CHF\"];\r\n    }else {\r\n      int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set();\r\n    }\r\n    if (hcc79_set.size && hcc57_set.size) {\r\n      int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = hcc79_set;\r\n    }else {\r\n      int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set();\r\n    }\r\n  }\r\n\r\n  if (disabl === true || disabl == 1) {\r\n      int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n      if (\"PRESSURE_ULCER\" in int_hccs) {\r\n        int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n      }\r\n      int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\r\n      int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\r\n      int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\r\n      int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\r\n\r\n      if (typeof age !== 'undefined' && age < 65) {\r\n          int_hccs[\"disable_substAbuse_psych_V23\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"]\r\n      }\r\n  }\r\n\r\n  var int_hccs_new = [];\r\n  for (var key in int_hccs) {\r\n     if (int_hccs.hasOwnProperty(key)) {\r\n          if (int_hccs[key].size !== 0) {\r\n              int_hccs_new.push(key);\r\n          }\r\n      }\r\n  }\r\n  \r\n  return ccs.concat(int_hccs_new)\r\n}\r\n\r\nfunction v24_interactions(ccs, model, disabl=false, age='') {\r\n  /*\r\n  Calculated interaction HCCs given a list of hccs, age, and disability flag\r\n  :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\r\n  :param disabl: CMS disabled flag\r\n  :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\r\n  :return: List of HCC codes, including interaction codes\r\n  */\r\n  var cc_set = new Set(ccs);\r\n  var int_hccs = {};\r\n   var cnt = cc_set.length;\r\n   if (cnt > 9) {\r\n    int_hccs[\"D10P\"];\r\n   }\r\n   if (cnt > 3 && cnt < 10) {\r\n    var index = \"D\".concat(cnt);\r\n    int_hccs[index];\r\n   } \r\n\r\n  // diagnostic categories\r\n  var diag_cats = {\r\n      \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\r\n      \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\r\n      \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\r\n      \"CHF\": new Set([\"HCC85\"]),\r\n      \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\r\n      \"RENAL_V24\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\", \"HCC138\"]),\r\n      \"SEPSIS\": new Set([\"HCC2\"]),\r\n      \"gSubstanceAbuse_V24\": new Set([\"HCC54\", \"HCC55\", \"HCC56\"]),\r\n      \"gPsychiatric_V24\": new Set([\"HCC57\", \"HCC58\", \"HCC59\", \"HCC60\"])\r\n  };\r\n\r\n  var my_dcs = {};\r\n\r\n  for (var key in diag_cats) {\r\n      if (diag_cats.hasOwnProperty(key)) {\r\n          var key_set = new Set(diag_cats[key])\r\n          var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\r\n          my_dcs[key] = new_values;\r\n      }\r\n  \r\n  }\r\n  // Community Interactions\r\n  var arry1 = ['CNA', 'CFA', 'CPA', 'CND', 'CFD', 'CPD'];\r\n  if (arry1.includes(model)) {\r\n    var hcc85_set = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n    var hcc47_set = new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\r\n    var hcc96_set = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\r\n    if ( my_dcs[\"CANCER\"].size && hcc47_set.size) {\r\n        int_hccs[\"HCC47_gCancer\"] = hcc47_set;\r\n    }else {\r\n      int_hccs[\"HCC47_gCancer\"] = new Set();\r\n    }\r\n    \r\n    if (my_dcs[\"DIABETES\"].size && hcc85_set.size) {\r\n        int_hccs[\"HCC85_gDiabetesMellit\"] = hcc85_set;\r\n    }else {\r\n      int_hccs[\"HCC85_gDiabetesMellit\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"gCopdCF\"].size && hcc85_set.size) {\r\n        int_hccs[\"HCC85_gCopdCF\"] = hcc85_set;\r\n    }else {\r\n      int_hccs[\"HCC85_gCopdCF\"] = new Set();\r\n    }\r\n    \r\n    if (my_dcs[\"RENAL_V24\"].size && hcc85_set.size) {\r\n        int_hccs[\"HCC85_gRenal_V24\"] = hcc85_set;\r\n    }else {\r\n      int_hccs[\"HCC85_gRenal_V24\"] = new Set();\r\n    }\r\n    if (my_dcs[\"gCopdCF\"].size && my_dcs[\"CARD_RESP_FAIL\"].size) {\r\n      int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"CARD_RESP_FAIL\"];\r\n    }else {\r\n      int_hccs[\"gRespDepandArre_gCopdCF\"] = new Set();\r\n    }\r\n    if (hcc96_set.size && hcc85_set.size) {\r\n      int_hccs[\"HCC85_HCC96\"] = hcc96_set;\r\n    }else {\r\n      int_hccs[\"HCC85_HCC96\"] = new Set();\r\n    }\r\n    if (my_dcs[\"gPsychiatric_V24\"].size && my_dcs[\"gSubstanceAbuse_V24\"].size) {\r\n      int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"] =  my_dcs[\"gSubstanceAbuse_V24\"];\r\n    }else {\r\n      int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"] = new Set();\r\n    }\r\n  }\r\n  \r\n  // institutional model interactions\r\n  var arry2 = ['INS'];\r\n  if (arry2.includes(model)) {\r\n    var hcc188_set = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\r\n    var hcc114_set = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\r\n    var hcc57_set = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x)));\r\n    var hcc79_set = new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\r\n\r\n\r\n    if (my_dcs[\"SEPSIS\"].size && int_hccs[\"PRESSURE_ULCER\"].size) {\r\n      int_hccs[\"SEPSIS_PRESSURE_ULCER\"] =  int_hccs[\"PRESSURE_ULCER\"];\r\n    }else {\r\n      int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = new Set();\r\n    }\r\n    if (my_dcs[\"SEPSIS\"].size && hcc188_set.size) {\r\n      int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = hcc188_set;\r\n    }else {\r\n      int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = new Set();\r\n    }\r\n    if (int_hccs[\"PRESSURE_ULCER\"].size && hcc188_set.size) {\r\n      int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n    }else {\r\n      int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"gCopdCF\"].size && hcc114_set.size) {\r\n      int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = hcc114_set;\r\n    }else {\r\n      int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = new Set();\r\n    }\r\n    if (int_hccs[\"PRESSURE_ULCER\"].size && hcc114_set.size) {\r\n      int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n    }else {\r\n      int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set();\r\n    }\r\n    if (my_dcs[\"SEPSIS\"].size && hcc114_set.size) {\r\n      int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = hcc114_set;\r\n    }else {\r\n      int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = new Set();\r\n    }\r\n    if (my_dcs[\"gCopdCF\"].size && hcc57_set.size) {\r\n      int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = my_dcs[\"gCopdCF\"];\r\n    }else {\r\n      int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set();\r\n    }\r\n    if (my_dcs[\"CHF\"].size && hcc57_set.size) {\r\n      int_hccs[\"SCHIZOPHRENIA_CHF\"] = my_dcs[\"CHF\"];\r\n    }else {\r\n      int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set();\r\n    }\r\n    if (hcc79_set.size && hcc57_set.size) {\r\n      int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = hcc79_set;\r\n    }else {\r\n      int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set();\r\n    }\r\n  }\r\n\r\n  if (disabl == true || disabl == 1) {\r\n      int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n      if (\"PRESSURE_ULCER\" in int_hccs) {\r\n        int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n      }\r\n      int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\r\n      int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\r\n      int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\r\n      int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\r\n\r\n      if (typeof age !== 'undefined' && age < 65) {\r\n          int_hccs[\"disable_substAbuse_psych_V24\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"]\r\n      }\r\n  }\r\n\r\n  var int_hccs_new = [];\r\n  for (var key in int_hccs) {\r\n     if (int_hccs.hasOwnProperty(key)) {\r\n          if (int_hccs[key].size !== 0) {     \r\n              int_hccs_new.push(key);\r\n          }\r\n      }\r\n  }\r\n  return ccs.concat(int_hccs_new)\r\n}\r\n\r\n// Unit tests module export\r\nmodule.exports = {cc_desc, cc_info, cc_combine, cc_gaps, cc_gaps_raf, cc_diff, cc_diff_raf, \r\n    cc_increment, cc_increment_raf,cc_raf,demo_raf,dx_desc,dx2cc,\r\n    dx_raf,clean_dx,clean_cc,dx_increment,dx_increment_raf,dx_gaps,dx_gaps_raf};\r\n"],"sourceRoot":""}