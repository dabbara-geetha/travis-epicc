{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/functions/functions.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","default_dxmap","default_hccmap","default_hcccoefn","fetch","then","response","json","data","interactions","ccs","disabl","age","cc_set","Set","int_hccs","diag_cats","my_dcs","key_set","new_values","filter","x","has","hcc85_set","hcc47_set","hcc96_set","size","hcc188_set","hcc114_set","hcc57_set","hcc79_set","int_hccs_new","push","concat","cnt","length","index","hcc_gaps","old_list","new_list","ver","model","sex","baserate","never_trump","new_hccs","prep_hccs","diff","hcc_diff","raf","parseFloat","hcc2raf","Math","round","dx_gaps","verbose","dx2hcc","Array","from","get_hcc_dx","clean_dxlist","dx2raf","dx_list","get_raf","unique_hccs","dxdct_hccs","dx_hccs","collator","Intl","Collator","undefined","numeric","sensitivity","sort","compare","dxmap","hccmap","dx_dct","unique_dx","dx","JSON","parse","stringify","ed_leukemia","ed_bronchitis","ed_vasc_insf","ed_emphysema","ed_breastca","ed_low_bw","ed_conjoined","ed_newbn_substance","ed_chron_resp","ed_disruptive_mood","ed_hemophilia","includes","female_sex","edit_dct","agesex_edits","hcc","add","got_trumped","temp_a","temp_b","map","e","temp_c","trumped_hcc","hcc_list","list_dx","String","replace","toUpperCase","split","dx_set","clean_hcclist","hcc_map","hcc_list_temp","isNaN","toString","trim","hcc1","hcc_set","hcc2","hccs","toLowerCase","trumped_set","child","temp_hcc_set","trump_hccs","hcc_dct","hcc_increment","old_hccs","final_hccs","dx_increments","dxinc","mydx","temp","old_set","new_set","old_children","new_children","new_parents","hcc3","new_hccs_temp","downgraded_temp","downgraded","downgrade_to_temp","downgrade_to","upgraded","prep_hccs_set","upgraded_temp","del_hccs_temp","del_hccs_union","del_hccs","old_raf","delta_raf","member","condition_list","orec","flag","endsWith","demo_codes","demo_str","age_maps","trunc","medicaid","origds","new_enrolee","age_labels","age_lower_bounds","age_upper_bounds","entries","lower_bound","mcaid_flag","origds_flag","ds_str","demo_lst","agesex","cond_dict","conditionlist","allhcc","list_hcc","item","Number","isInteger","startsWith","dct","combined_hccs","condition_resolver","condition","hcc_lst","hcccoefn","demo_detail","hcc_detail","demo_raf","hcc_raf","demo","label","score","toFixed","j","temp_condition_list","raf_dict","result","dx_array","temp_dx_array","hcc_dict","hcc_cust_list","val","verboses","raf_value","dx_values","dx_set_values","forEach","v","cc_array","temp_cc_array","hcc_values","cc","temp_hccmap","temp_cc","desc","children","parents","RAF","base_cc_array","additional_cc_array","temp_base_cc_array","temp_additional_cc_array","cclist","adds","downgraded_to","deletes","base_dx_array","additional_dx_array","temp_base_dx_array","temp_additional_dx_array","dx_dict"],"mappings":"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","file":"functions.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 121);\n","var default_dxmap, default_hccmap, default_hcccoefn, dummy;\nfetch('https://pnchakravarthula.github.io/epicc.github.io/dist/load_dxmap.json')\n.then(response => response.json())\n.then(data => {\n  default_dxmap = data;\n});\nfetch('https://pnchakravarthula.github.io/epicc.github.io/dist/load_hccmap.json')\n.then(response => response.json())\n.then(data => {\n  default_hccmap = data;\n});\nfetch('https://pnchakravarthula.github.io/epicc.github.io/dist/load_hcccoefn.json')\n.then(response => response.json())\n.then(data => {\n  default_hcccoefn = data;\n});\n\nvar default_ver = 'v23';\nvar default_model = 'CNA'; \nvar default_baserate = 868.0;\nvar default_verbose = true;\nvar default_never_trump = 0;\nvar interactions = {'v22': v22_interactions, 'v23': v23_interactions, 'v24': v24_interactions};\n\n/**\n * Returns demographic raf value based on age, gender and coding model\n * @customfunction\n * @param {string[][]} condition_list accepts array\n */\nfunction demo_raf(condition_list, age = 65, sex = 'M', model = '', orec = '0', ver = '', baserate = 0.0) {\n  for (var i = 0; i < condition_list.length; i++) {\n    for (var j = 0; j < condition_list[i].length; j++) {\n      condition_list = condition_list;\n    }\n  }\n  var temp_condition_list = condition_list.toString();\n  temp_condition_list = temp_condition_list.split(\",\");\n  for (i = 0; i < temp_condition_list.length; i++) {\n    temp_condition_list[i] = temp_condition_list[i].toString().trim();\n  }\n  ver = ver.toLowerCase() || default_ver;\n  model = model.toUpperCase() || default_model;\n  baserate = baserate || default_baserate;\n\n  var raf_dict =  member(condition_list, age, sex, model, orec, ver, baserate);\n  result = raf_dict['raf']['demo_score'];\n  return result.toString();\n}\n\n/**\n * Returns comma-separated list of descriptions of each DX Code from CMS crosswalk.\n * @customfunction\n * @param {string[][]} dx_array accepts array of hcc codes\n */\nfunction dx_desc(dx_array, ver = '', age = 0, sex = '', verbose = true) {\n  for (i = 0; i < dx_array.length; i++) {\n      for (j = 0; j < dx_array[i].length; j++) {\n        dx_array = dx_array;\n      }\n  }\n  var temp_dx_array = dx_array.toString();\n  temp_dx_array = temp_dx_array.split(\",\");\n  for (i = 0; i < temp_dx_array.length; i++) {\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\n  }\n  ver = ver.toLowerCase() || default_ver;\n  verbose = verbose || default_verbose;\n  \n  var hcc_dict = dx_hccs(temp_dx_array, ver, age, sex, verbose);\n  var hcc_cust_list = [];\n  for (var [key, value] of Object.entries(hcc_dict)) {\n    var val = key + \":\" + value[\"desc\"];\n    hcc_cust_list.push(val);\n  }\n  return hcc_cust_list.toString();\n}\n\n/**\n * Returns a comma separated list of the ccs represented by a list of DX codes after trumping/interaction logic is applied\n * @customfunction\n * @param {string[][]} dx_array accepts array of dx codes\n */\nfunction dx2cc(dx_array, age = 0, ver = '', sex = '', disabl = false, never_trump = 0, verbose = false) {\n  for (var i = 0; i < dx_array.length; i++) {\n    for (var j = 0; j < dx_array[i].length; j++) {\n      dx_array = dx_array;\n    }\n  }\n  var temp_dx_array = dx_array.toString();\n  temp_dx_array = temp_dx_array.split(\",\");\n  for (i = 0; i < temp_dx_array.length; i++) {\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\n  }\n  ver = ver.toLowerCase() || default_ver;\n  never_trump = never_trump || default_never_trump;\n  var unique_hccs = dx2hcc(temp_dx_array, age, ver, sex, disabl, never_trump, verboses);\n  return unique_hccs.toString();\n}\n\n/**\n * Returns cc raf of associated dx codes after conversion to cc and trumping/interaction logic is applied (equivalent of cc_raf(dx2cc(dx_array))\n * @customfunction\n * @param {string[][]} dx_array accepts array of dx codes\n */\nfunction dx_raf(dx_array, age = 0, ver = '', model = '', sex = '', disabl = false, verbose = false, never_trump = 0, baserate = 0.0) {\n  /*\n  Utility to calculate raf from list of DX codes\n  */\n  for (var i = 0; i < dx_array.length; i++) {\n    for (var j = 0; j < dx_array[i].length; j++) {\n      dx_array = dx_array;\n    }\n  }\n  var temp_dx_array = dx_array.toString();\n  temp_dx_array = temp_dx_array.split(\",\");\n  for (i = 0; i < temp_dx_array.length; i++) {\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\n  }\n  ver = ver.toLowerCase() || default_ver;\n  model = model.toUpperCase() || default_model;\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var raf_value = dx2raf(temp_dx_array, age, ver, model, sex, disabl, verbose, never_trump, baserate);\n  return raf_value.toString();\n}\n\n/**\n * Given a list of dx codes, return a list of deduped, normalized and untrumped dx codes valid for the coding model\n * @customfunction\n * @param {string[][]} dx_array accepts array of dx codes\n */\nfunction clean_dx(dx_array, ver = '') {\n  \n  // Convert string to list, dedupe, and ensure DX are formatted correctly.\n  for (var i = 0; i < dx_array.length; i++) {\n    for (var j = 0; j < dx_array[i].length; j++) {\n      dx_array = dx_array;\n    }\n  }\n  var temp_dx_array = dx_array.toString();\n  temp_dx_array = temp_dx_array.split(\",\");\n  for (i = 0; i < temp_dx_array.length; i++) {\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\n  }\n  ver = ver.toLowerCase() || default_ver;\n  var dx_values = clean_dxlist(temp_dx_array, ver);\n  var dx_set_values = [];\n  dx_values.forEach(v => dx_set_values.push(v));\n  return dx_set_values.toString();\n}\n\n/**\n * Given a list of ccs, return a list of deduped, normalized and untrumped ccs codes valid for the coding model\n * @customfunction\n * @param {string[][]} cc_array accepts array of hcc codes\n */\nfunction clean_cc(cc_array, ver = '') {\n  for (var i = 0; i < cc_array.length; i++) {\n      for (var j = 0; j < cc_array[i].length; j++) {\n        cc_array = cc_array;\n      }\n  }\n  var temp_cc_array = cc_array.toString();\n  temp_cc_array = temp_cc_array.split(\",\");\n  for (i = 0; i < temp_cc_array.length; i++) {\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\n  }\n  ver = ver.toLowerCase() || default_ver;\n  var hcc_values = clean_hcclist(temp_cc_array, ver);\n  return hcc_values.toString();\n}\n\n/**\n * Returns comma-separated list of descriptions of each HCC Code from CMS crosswalk.\n * @customfunction\n * @param {string[][]} cc_array accepts array of hcc codes\n */\nfunction cc_desc(cc_array, ver = '', age = 0, sex = '', verbose = false) {\n  for (i = 0; i < cc_array.length; i++) {\n      for (j = 0; j < cc_array[i].length; j++) {\n        cc_array = cc_array;\n      }\n  }\n  var temp_cc_array = cc_array.toString();\n  temp_cc_array = temp_cc_array.split(\",\");\n  for (i = 0; i < temp_cc_array.length; i++) {\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\n  }\n  ver = ver.toLowerCase() || default_ver;\n  verbose = verbose || default_verbose;\n  var hcc_dict = hcc_dct(temp_cc_array, ver, age, sex, verbose);\n  var hcc_cust_list = [];\n  for (var [key, value] of Object.entries(hcc_dict)) {\n    var val = key + \":\" + value[\"desc\"];\n    hcc_cust_list.push(val);\n  }\n  return hcc_cust_list.toString();\n}\n\n/**\n * Returns multi-line info block for an HCC: Description, Children, Parents, RAF.  Past MVP can also feed a info pane / popup for desktop calculator like use.\nTo enable screen reader support, press Ctrl+Alt+Z To learn about keyboard shortcuts, press Ctrl+slash\n * @customfunction\n * @param {string[][]} cc accepts array of hcc codes\n */\nfunction cc_info(cc, ver = '', model = '', disabl = false, age = 0, never_trump = 0, baserate = 0.0) {\n  ver = ver.toLowerCase() || default_ver;\n  model = model.toUpperCase() || default_model;\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var temp_hccmap, raf_value;\n  for (i = 0; i < cc.length; i++) {\n      for (j = 0; j < cc[i].length; j++) {\n        cc = cc;\n      }\n  }\n  var temp_cc = cc.toString();\n  temp_cc = temp_cc.split(\",\");\n  for (i = 0; i < temp_cc.length; i++) {\n    temp_cc[i] = temp_cc[i].toString().trim();\n  }\n  var hccmap = default_hccmap[ver];\n  // for (var i = 0; i < temp_cc.length; i++) {\n  temp_hccmap = hccmap[temp_cc];\n  raf_value = hcc2raf(temp_cc, ver, model, disabl, age, never_trump, baserate);\n  // }\n  var result = {desc: temp_hccmap['desc'], children: temp_hccmap['children'], parents: temp_hccmap['parents'], RAF: raf_value};\n  result = JSON.stringify(result);\n  return result.replace(/\"/g, '');\n}\n\n/**\n * Returns cc raf (does not include demographic RAF) of cc codes after trumping/interaction logic is applied\n * @customfunction\n * @param {string[][]} cc_array accepts array of hcc codes\n */\nfunction cc_raf(cc_array, ver = '', model = '', disabl = false, age = 0, never_trump = 0, baserate = 0.0) {\n  for (i = 0; i < cc_array.length; i++) {\n      for (j = 0; j < cc_array[i].length; j++) {\n        cc_array = cc_array;\n      }\n  }\n  var temp_cc_array = cc_array.toString();\n  temp_cc_array = temp_cc_array.split(\",\");\n  for (i = 0; i < temp_cc_array.length; i++) {\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\n  }\n  ver = ver.toLowerCase() || default_ver;\n  model = model.toUpperCase() || default_model;\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var raf_value = hcc2raf(temp_cc_array, ver, model, disabl, age, never_trump, baserate);\n  return raf_value.toString();\n}\n\n/**\n * cc_combine\n * @customfunction\n * @param {string[][]} cc_array accepts array of hcc codes\n */\nfunction cc_combine(cc_array, ver = '', age = 0, disabl = false, never_trump = 0) {\n  for (i = 0; i < cc_array.length; i++) {\n      for (j = 0; j < cc_array[i].length; j++) {\n        cc_array = cc_array;\n      }\n  }\n  var temp_cc_array = cc_array.toString();\n  temp_cc_array = temp_cc_array.split(\",\");\n  for (i = 0; i < temp_cc_array.length; i++) {\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\n  }\n  ver = ver.toLowerCase() || default_ver;\n  never_trump = never_trump || default_never_trump;\n  var hccs = prep_hccs(temp_cc_array, ver, age, disabl, never_trump);\n  return hccs.toString();\n}\n\n/**\n * Returns the RAF of the net incremental change (+Adds - Upgraded) between cc_lists.  Equivalent of cc_raf(cc_diff_increment)\n * @customfunction\n * @param {string[][]} base_cc_array accepts array of cc codes\n * @param {string[][]} additional_cc_array accepts array of cc codes\n */\nfunction cc_increment_raf(base_cc_array, additional_cc_array, ver = '', model = '', age = 0, disabl = false, never_trump = 0, baserate = 0.0) {\n  for (i = 0; i < base_cc_array.length; i++) {\n    for (j = 0; j < base_cc_array[i].length; j++) {\n      base_cc_array = base_cc_array;\n    }\n  }\n  var temp_base_cc_array = base_cc_array.toString();\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\n  for (i = 0; i < temp_base_cc_array.length; i++) {\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_cc_array.length; i++) {\n    for (j = 0; j < additional_cc_array[i].length; j++) {\n      additional_cc_array = additional_cc_array;\n    }\n  }\n  var temp_additional_cc_array = additional_cc_array.toString();\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\n  }\n  ver = ver.toLowerCase() || default_ver;\n  model = model.toUpperCase() || default_model;\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  age = age || 0;\n  disabl = disabl || false;\n  var hcc_dict = hcc_increment(temp_base_cc_array, temp_additional_cc_array, ver, model, age, disabl, never_trump, baserate);\n  var result = hcc_dict['raf'];\n  return result.toString(); \n}\n\n/**\n * Returns the net incremental change between cc_lists, for example for calculating the value of a coding project over claims. Equivalent of +Adds - Upgraded in the format('+HCC001, +HCC18, - HCC019')\n * @customfunction\n * @param {string[][]} base_cc_array accepts array of cc codes\n * @param {string[][]} additional_cc_array accepts array of cc codes\n */\nfunction cc_increment(base_cc_array, additional_cc_array, ver = '', model = '', age = 0, disabl = false, never_trump = 0, baserate = 0.0) {\n  for (i = 0; i < base_cc_array.length; i++) {\n    for (j = 0; j < base_cc_array[i].length; j++) {\n      base_cc_array = base_cc_array;\n    }\n  }\n  var temp_base_cc_array = base_cc_array.toString();\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\n  for (i = 0; i < temp_base_cc_array.length; i++) {\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_cc_array.length; i++) {\n    for (j = 0; j < additional_cc_array[i].length; j++) {\n      additional_cc_array = additional_cc_array;\n    }\n  }\n  var temp_additional_cc_array = additional_cc_array.toString();\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\n  }\n  ver = ver.toLowerCase() || default_ver;\n  model = model.toUpperCase() || default_model;\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  age = age || 0;\n  disabl = disabl || false;\n  var hcc_dict = hcc_increment(temp_base_cc_array, temp_additional_cc_array, ver, model, age, disabl, never_trump, baserate);\n  var result = hcc_dict['adds'] + \",\" + \"-\" + hcc_dict['upgraded'];\n  return result.toString(); \n}\n\n/**\n * Special case of diff_deletes that focuses on YoY Chronic Gaps and downgrades.  Maybe does some adjusting for differing coding models yoy, but that sounds hard\n * @customfunction\n * @param {string[][]} base_cc_array accepts array of cc codes\n * @param {string[][]} additional_cc_array accepts array of cc codes\n */\nfunction cc_gaps(base_cc_array, additional_cc_array, ver = '', model = '', age = 0, sex= '', disabl = false, baserate = 0.0) {\n  for (i = 0; i < base_cc_array.length; i++) {\n    for (j = 0; j < base_cc_array[i].length; j++) {\n      base_cc_array = base_cc_array;\n    }\n  }\n  var temp_base_cc_array = base_cc_array.toString();\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\n  for (i = 0; i < temp_base_cc_array.length; i++) {\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_cc_array.length; i++) {\n    for (j = 0; j < additional_cc_array[i].length; j++) {\n      additional_cc_array = additional_cc_array;\n    }\n  }\n  var temp_additional_cc_array = additional_cc_array.toString();\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\n  }\n  \n  ver = ver.toLowerCase() || default_ver;\n  model = model.toUpperCase() || default_model;\n  baserate = baserate || default_baserate;\n\n  var hcc_dict = hcc_gaps(temp_base_cc_array, temp_additional_cc_array, ver, model, age, sex, disabl, baserate);\n  var result = hcc_dict['Deletes'] + \",\" + hcc_dict['Downgraded'];\n  return result.toString();\n}\n\n/**\n * Special case of diff_deletes_raf that focuses on YoY Chronic Gaps and downgrades (net raf of downgraded).  Equivalent of cc_chronic(cc_diff_deletes). Maybe does some adjusting for differing coding models yoy, but that sounds hard\n * @customfunction\n * @param {string[][]} base_cc_array accepts array of cc codes\n * @param {string[][]} additional_cc_array accepts array of cc codes\n */\nfunction cc_gaps_raf(base_cc_array, additional_cc_array, ver = '', model = '', age = 0, sex= '', disabl = false, baserate = 0.0) {\n  for (i = 0; i < base_cc_array.length; i++) {\n    for (j = 0; j < base_cc_array[i].length; j++) {\n      base_cc_array = base_cc_array;\n    }\n  }\n  var temp_base_cc_array = base_cc_array.toString();\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\n  for (i = 0; i < temp_base_cc_array.length; i++) {\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_cc_array.length; i++) {\n    for (j = 0; j < additional_cc_array[i].length; j++) {\n      additional_cc_array = additional_cc_array;\n    }\n  }\n  var temp_additional_cc_array = additional_cc_array.toString();\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\n  }\n  \n  ver = ver.toLowerCase() || default_ver;\n  model = model.toUpperCase() || default_model;\n  baserate = baserate || default_baserate;\n\n  var hcc_dict = hcc_gaps(temp_base_cc_array, temp_additional_cc_array, ver, model, age, sex, disabl, baserate);\n  var result = hcc_dict['raf'];\n  return result.toString();\n}\n\n/**\n * Compares a base list of ccs and additional ccs and returns an information block on the differences ; eg: \"Adds: HCC001, HCC18; Deletes: HCC135; Upgraded: HCC019; Downgraded:'\n * @customfunction\n * @param {string[][]} base_cc_array accepts array of cc codes\n * @param {string[][]} additional_cc_array accepts array of cc codes\n *\n */\nfunction cc_diff(base_cc_array = [], additional_cc_array = [], ver='', age=0, sex='', model='', disabl=false, never_trump = 0, baserate=0.0) {\n  for (i = 0; i < base_cc_array.length; i++) {\n    for (j = 0; j < base_cc_array[i].length; j++) {\n      base_cc_array = base_cc_array;\n    }\n  }\n  var temp_base_cc_array = base_cc_array.toString();\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\n  for (i = 0; i < temp_base_cc_array.length; i++) {\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_cc_array.length; i++) {\n    for (j = 0; j < additional_cc_array[i].length; j++) {\n      additional_cc_array = additional_cc_array;\n    }\n  }\n  var temp_additional_cc_array = additional_cc_array.toString();\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\n  }\n  ver = ver.toLowerCase() || default_ver;\n  model = model.toUpperCase() || default_model;\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var cclist = hcc_diff(temp_base_cc_array, temp_additional_cc_array, ver, age, sex, model, disabl, never_trump, baserate);\n  var result = {adds: cclist['adds'], upgraded: cclist['upgraded'], downgraded: cclist['downgraded'], downgraded_to: cclist['downgrade_to'], deletes: cclist['deletes']};\n  result = JSON.stringify(result);\n  return result.replace(/\"/g, '');\n}\n\n/**\n * Compares a base list of ccs and additional ccs and returns an information block on the differences ; eg: \"Adds: HCC001, HCC18; Deletes: HCC135; Upgraded: HCC019; Downgraded:'\n * @customfunction\n * @param {string[][]} base_cc_array accepts array of cc codes\n * @param {string[][]} additional_cc_array accepts array of cc codes\n *\n */\nfunction cc_diff_raf(base_cc_array = [], additional_cc_array = [], ver='', age=0, sex='', model='', disabl=false, never_trump = 0, baserate=0.0) {\n  for (i = 0; i < base_cc_array.length; i++) {\n    for (j = 0; j < base_cc_array[i].length; j++) {\n      base_cc_array = base_cc_array;\n    }\n  }\n  var temp_base_cc_array = base_cc_array.toString();\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\n  for (i = 0; i < temp_base_cc_array.length; i++) {\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_cc_array.length; i++) {\n    for (j = 0; j < additional_cc_array[i].length; j++) {\n      additional_cc_array = additional_cc_array;\n    }\n  }\n  var temp_additional_cc_array = additional_cc_array.toString();\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\n  }\n  ver = ver.toLowerCase() || default_ver;\n  model = model.toUpperCase() || default_model;\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var cclist = hcc_diff(temp_base_cc_array, temp_additional_cc_array, ver, age, sex, model, disabl, never_trump, baserate);\n  return cclist[\"raf\"].toString();\n}\n\n/**\n * Returns the net incremental change between dx_lists, for example for calculating the value of a coding project over claims. Equivalent of +Adds - Upgraded in the format('+dx001, +dx18, - dx019')\n * @customfunction\n * @param {string[][]} base_dx_array accepts array of cc codes\n * @param {string[][]} additional_dx_array accepts array of cc codes\n *\n */\nfunction dx_increment(base_dx_array = [], additional_dx_array = [], ver = '', model = '', age = 0, disabl = false, never_trump = 0, baserate = 0.0) {\n  for (i = 0; i < base_dx_array.length; i++) {\n    for (j = 0; j < base_dx_array[i].length; j++) {\n      base_dx_array = base_dx_array;\n    }\n  }\n  var temp_base_dx_array = base_dx_array.toString();\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\n  for (i = 0; i < temp_base_dx_array.length; i++) {\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_dx_array.length; i++) {\n    for (j = 0; j < additional_dx_array[i].length; j++) {\n      additional_dx_array = additional_dx_array;\n    }\n  }\n  var temp_additional_dx_array = additional_dx_array.toString();\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\n  }\n  ver = ver.toLowerCase() || default_ver;\n  model = model.toUpperCase() || default_model;\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var dx_dict  = dx_increments(temp_base_dx_array, temp_additional_dx_array, ver, model, age, disabl, never_trump, baserate);\n  var result = dx_dict['adds'] + \",\" + \"-\" + dx_dict['upgraded'];\n  return result.toString();\n}\n\n/**\n * Returns the RAF of the net incremental change (+Adds - Upgraded) between dx_lists.  Equivalent of dx_raf(dx_diff_increment)\n * @customfunction\n * @param {string[][]} base_dx_array accepts array of cc codes\n * @param {string[][]} additional_dx_array accepts array of cc codes\n *\n */\nfunction dx_increment_raf(base_dx_array = [], additional_dx_array = [], ver = '', model = '', age = 0, disabl = false, never_trump = 0, baserate = 0.0) {\n  for (i = 0; i < base_dx_array.length; i++) {\n    for (j = 0; j < base_dx_array[i].length; j++) {\n      base_dx_array = base_dx_array;\n    }\n  }\n  var temp_base_dx_array = base_dx_array.toString();\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\n  for (i = 0; i < temp_base_dx_array.length; i++) {\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_dx_array.length; i++) {\n    for (j = 0; j < additional_dx_array[i].length; j++) {\n      additional_dx_array = additional_dx_array;\n    }\n  }\n  var temp_additional_dx_array = additional_dx_array.toString();\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\n  }\n  ver = ver.toLowerCase() || default_ver;\n  model = model.toUpperCase() || default_model;\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var dx_dict  = dx_increments(temp_base_dx_array, temp_additional_dx_array, ver, model, age, disabl, never_trump, baserate);\n  var result = dx_dict['raf'];\n  return result.toString();\n}\n\n/**\n * Special case of diff_deletes that focuses on YoY Chronic Gaps and downgrades.\n * @customfunction\n * @param {string[][]} base_dx_array accepts array of dx codes\n * @param {string[][]} additional_dx_array accepts array of dx codes\n *\n */\nfunction dx_gap(base_dx_array = [], additional_dx_array = [],  ver = '', model = '', age = 0, sex = '', disabl = false, baserate = 0.0) {\n  for (i = 0; i < base_dx_array.length; i++) {\n    for (j = 0; j < base_dx_array[i].length; j++) {\n      base_dx_array = base_dx_array;\n    }\n  }\n  var temp_base_dx_array = base_dx_array.toString();\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\n  for (i = 0; i < temp_base_dx_array.length; i++) {\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_dx_array.length; i++) {\n    for (j = 0; j < additional_dx_array[i].length; j++) {\n      additional_dx_array = additional_dx_array;\n    }\n  }\n  var temp_additional_dx_array = additional_dx_array.toString();\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\n  }\n  ver = ver.toLowerCase() || default_ver;\n  model = model.toUpperCase() || default_model;\n  baserate = baserate || default_baserate;\n  var dx_dict = dx_gaps(temp_base_dx_array, temp_additional_dx_array, ver, model, age, sex, disabl, baserate);\n  var result = dx_dict['Deletes'] + \",\" + dx_dict['Downgraded'];\n  return result.toString();\n}\n\n/**\n * Special case of diff_deletes_raf that focuses on YoY Chronic Gaps and downgrades (net raf of downgraded).  Equivalent of dx_chronic(dx_diff_deletes). Maybe does some adjusting for differing coding models yoy, but that sounds hard\n * @customfunction\n * @param {string[][]} base_dx_array accepts array of dx codes\n * @param {string[][]} additional_dx_array accepts array of dx codes\n *\n */\nfunction dx_gap_raf(base_dx_array = [], additional_dx_array = [],  ver = '', model = '', age = 0, sex = '', disabl = false, baserate = 0.0) {\n  for (i = 0; i < base_dx_array.length; i++) {\n    for (j = 0; j < base_dx_array[i].length; j++) {\n      base_dx_array = base_dx_array;\n    }\n  }\n  var temp_base_dx_array = base_dx_array.toString();\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\n  for (i = 0; i < temp_base_dx_array.length; i++) {\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_dx_array.length; i++) {\n    for (j = 0; j < additional_dx_array[i].length; j++) {\n      additional_dx_array = additional_dx_array;\n    }\n  }\n  var temp_additional_dx_array = additional_dx_array.toString();\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\n  }\n  ver = ver.toLowerCase() || default_ver;\n  model = model.toUpperCase() || default_model;\n  baserate = baserate || default_baserate;\n  var dx_dict = dx_gaps(temp_base_dx_array, temp_additional_dx_array, ver, model, age, sex, disabl, baserate);\n  var result = dx_dict['raf'];\n  return result.toString();\n}\n\nfunction hcc_gaps(old_list, new_list, ver, model, age, sex, disabl, baserate) {\n  /*\n  Utility to identify hccs that were dropped or downgraded from one list to the next\n  */\n  never_trump = default_never_trump;\n  var new_hccs = prep_hccs(new_list, ver, age, disabl, never_trump);\n  var old_hccs = prep_hccs(old_list, ver, age, disabl, never_trump);\n\n  var diff = hcc_diff(old_hccs, new_hccs, ver, age, sex, model, disabl, never_trump, baserate);\n  var cal1 = parseFloat(hcc2raf(diff['deletes'], ver, model, disabl, age, never_trump, baserate));\n  var cal2 = parseFloat(hcc2raf(diff['downgraded'], ver, model, disabl, age, never_trump, baserate));\n  var cal3 = parseFloat(hcc2raf(diff['downgrade_to'], ver, model, disabl, age, never_trump, baserate));\n  var raf = -(cal1+cal2)+cal3;\n  var gaps = { \"Deletes\": diff[\"deletes\"], \"Downgraded\": diff[\"downgraded\"], \"raf\": raf, \"premium\": Math.round(raf * baserate, 2) };\n  return gaps;\n}\n\nfunction dx_gaps(old_list, new_list, ver, model, age, sex, disabl, baserate) {\n  /*\n  Utility to identify hccs that were dropped or downgraded from one list to the next\n  */\n  never_trump = default_never_trump;\n  verbose = default_verbose;\n\n  var old_hccs = dx2hcc(old_list, age, ver, sex, disabl, never_trump, verbose);\n  var new_hccs = dx2hcc(new_list, age, ver, sex, disabl, never_trump, verbose);\n  var diff = hcc_gaps(old_hccs, new_hccs, ver, model, age, sex, disabl, baserate);\n  diff['Downgraded'] = Array.from(get_hcc_dx(diff['Downgraded'], clean_dxlist(old_list, ver), ver));\n  diff['Deletes'] = Array.from(get_hcc_dx(diff['Deletes'], clean_dxlist(old_list, ver), ver));\n  return diff;\n}\n\nfunction dx2raf(dx_list, age, ver, model, sex, disabl, verbose, never_trump, baserate) {\n  /*\n  Utility to calculate raf from list of DX codes\n  */\n  var hccs = dx2hcc(dx_list, age, ver, sex, disabl, never_trump, verbose);\n  var raf = get_raf([], hccs, ver, model, verbose, baserate);\n  return raf[\"hcc_score\"];\n}\n\nfunction dx2hcc(dx_list, age, ver, sex, disabl, never_trump, verbose) {\n  /*\n  Utility to calculate a list of unique, trumped, HCCs from dx codes, includes interactions and age/sex edits.\n  :param dx_list: list of str\n                  List of DX Codes (case and decimal insensitive)\n  :param ver: str\n              HCC Model version\n  :param age: float\n              Beneficiary age\n  :param verbose:\n  :param disabl: bool\n                  Disability flag\n  :param sex: Gender {\"M\" or \"F\"}\n  :return: list of str\n          List of HCC codes\n  */\n  \n  var dx_dct = dx_hccs(dx_list, ver, age, sex, verbose);\n  var unique_hccs = dxdct_hccs(dx_dct, never_trump);\n  var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n  unique_hccs.sort(collator.compare);\n  unique_hccs = interactions[ver](unique_hccs, disabl, age);\n  return unique_hccs;\n}\n\nfunction dx_hccs(dx_list, ver, age, sex, verbose) {\n  /*\n  Look up the HCC code for each unique DX code in a list of DX. Includes trumping and agesex edits\n  :param dx_list: list of str\n                  List of dx codes; case and decimal insensitive\n  :param ver: str\n              Optional HCC version. Otherwise uses default version of ccalc object\n  :param age: float\n              Member age\n  :param sex: str\n              Member gender {\"M\"/\"F\"}\n  :param verbose: bool\n                  Include Non HCC DX in outputs\n  :return: dict\n          Dict of unique DX codes and their corresponding hcc codes\n  */\n  \n  var dxmap = default_dxmap[ver];\n  var hccmap = default_hccmap[ver];\n  var dx_dct = {};\n\n  var unique_dx = clean_dxlist(dx_list, ver);\n  // Validate DX against model and pull in DX info  \n  for (var dx of unique_dx) {\n      if (dx in dxmap) {\n          dx_dct[dx] = JSON.parse(JSON.stringify(dxmap[dx]));\n      } else if (verbose) {\n          dx_dct[dx] = { \"desc\": \"\", \"hccs\": {} };\n      }\n  }\n\n  if (age && sex) {  // age and sex are optional. w/o them this function can still generically do dx->hcc calcs\n      agesex_edits(dx_dct, age, sex);\n  }\n\n  // Find all unique HCCs that are valid in the hcc ver\n  var unique_hccs = new Set();\n\n  for (var key in dx_dct) {\n      if (dx_dct.hasOwnProperty(key)) {\n          for (var hcc in dx_dct[key]['hccs']) {\n              if (dx_dct[key]['hccs'].hasOwnProperty(hcc)) {\n                  if (dx_dct[key]['hccs'][hcc] in hccmap) {\n                      unique_hccs.add(dx_dct[key]['hccs'][hcc]);\n                  }\n              }\n          }\n      }\n  };\n\n  var got_trumped = {};\n  for (var hcc of unique_hccs) {\n      for (var child of hccmap[hcc]['children']) {\n          got_trumped[child] = hcc;\n      }\n  }\n\n  // Apply trumping and convert to HCC sets to lists (better for json serialization)\n\n  for (var dx in dx_dct) {\n      if (dx_dct.hasOwnProperty(dx)) {\n          var temp_a = dx_dct[dx]['hccs'];\n          var temp_b = [];\n          for (var i in dx_dct[dx]['hccs']) {\n              temp_b.push({ 'desc': hccmap[dx_dct[dx]['hccs'][i]]['desc'] });\n          }\n          var c = temp_a.map(function (e, i) {\n              return [e, temp_b[i]];\n          });\n          var temp_c = {};\n          for (var key in c) {\n              if (c.hasOwnProperty(key)) {\n                  temp_c[c[key][0]] = c[key][1];\n              }\n          }\n          dx_dct[dx]['hccs'] = temp_c;\n          for (var trumped_hcc in got_trumped) {\n              if (got_trumped.hasOwnProperty(trumped_hcc)) {\n                  if (trumped_hcc in dx_dct[dx]['hccs']) { // If we find trumped HCC, replace with note of its demise\n                      dx_dct[dx]['hccs'][trumped_hcc]['trumped by'] = got_trumped[trumped_hcc];\n                  }\n              }\n          }\n      }\n  }\n  return dx_dct;\n}\n\nfunction dxdct_hccs(dx_dct, never_trump = 0) {\n  never_trump = never_trump || default_never_trump;\n  var hcc_list = new Set();\n\n  if (never_trump == 0) {\n      for (var key in dx_dct) {\n          if (dx_dct.hasOwnProperty(key)) {\n              for (var hcc in dx_dct[key]['hccs']) {\n                  if (dx_dct[key]['hccs'].hasOwnProperty(hcc)) {\n                      if (!(dx_dct[key]['hccs'][hcc].hasOwnProperty(['trumped by']))) {\n                        hcc_list.add(hcc);                          \n                      }\n                  }\n              }\n          }\n      }\n      hcc_list = Array.from(hcc_list);\n      var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n      hcc_list.sort(collator.compare);\n  } else {\n    var hcc_list = new Set();\n    for (var key in dx_dct) {\n        if (dx_dct.hasOwnProperty(key)) { \n            for (var hcc in dx_dct[key]['hccs']){\n                hcc_list.add(dx_dct[key]['hccs'][hcc]);\n            }\n        }\n    }\n    hcc_list = Array.from(hcc_list);\n    var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n    hcc_list.sort(collator.compare);\n  }\n  return hcc_list;\n}\n\nfunction clean_dxlist(dx_list, ver) {\n  // Convert string to list, dedupe, and ensure DX are formatted correctly.\n  var dxmap = default_dxmap[ver];\n  var list_dx = [];\n  for (var i =0; i < dx_list.length;  i++) {\n      if (dx_list[i] != '') {\n          list_dx[i] = (String(dx_list[i]).replace('.', '')).toUpperCase();\n      }\n  }\n  if (typeof (list_dx) == 'string') {\n      list_dx = list_dx.split(/\\s*,\\s*|\\s+|\\s*;\\s*|\\s*:\\s*/);\n  }\n  var dx_set = new Set();\n  for (var dx = 0; dx < list_dx.length; dx++) {\n      if (dxmap.hasOwnProperty(list_dx[dx])) {\n          dx_set.add(list_dx[dx]);\n      }\n  }\n  return dx_set;\n}\n\nfunction clean_hcclist(hcc_list, ver) {\n  var hcc_map = default_hccmap[ver];\n\n  if (typeof hcc_list == 'string') {\n    hcc_list = hcc_list.split(/\\s*,\\s*|\\s+|\\s*;\\s*|\\s*:\\s*/);\n  }\n  else if (typeof hcc_list == 'number') {\n    hcc_list = [hcc_list];\n  }\n\n  // If you got integers, add the HCC prefix. If strings, make sure they're stripped and uppercase\n  var hcc_list_temp = [];\n  for (var hcc of hcc_list) {\n      if (!isNaN(hcc.toString().trim())) {\n          hcc_list_temp.push(\"HCC\" + hcc.toString().trim());\n      } else {\n          hcc_list_temp.push(hcc.trim().toUpperCase());\n      }\n  }\n  hcc_list = hcc_list_temp;\n  //Replacing HCC019 to HCC19\n  var hcc_list_temp = [];\n  for (var hcc1 of hcc_list) {\n      hcc_list_temp.push(hcc1.replace(/HCC0+/, 'HCC'));\n  }\n  hcc_list = hcc_list_temp;\n\n  // We want HCC1 rather than HCC001, etc.\n  var hcc_set = new Set();\n  for (var hcc2 of hcc_list) {\n      if (hcc_map.hasOwnProperty(hcc2)) {\n          hcc_set.add(hcc2);\n      }\n  }\n  return Array.from(hcc_set);\n}\n\nfunction hcc2raf(hcc_list, ver, model, disabl, age, never_trump, baserate) {\n  /*\n  Utility for calculating hcc raf for a list of hccs\n  */\n  var temp_hcc_list = prep_hccs(hcc_list, ver, age, disabl, never_trump);\n  var raf = get_raf([], temp_hcc_list, ver, model, verbose = true, baserate);\n  return raf[\"hcc_score\"];\n}\n\nfunction prep_hccs(hcc_list, ver, age, disabl, never_trump) {\n  /*\n  Utility for prepping an HCC list, applying Trumping and Interactions; does not include age/sex interactions\n  as they at the DX level\n  */\n  var hccs = trump_hccs(hcc_list, ver, never_trump);\n  hccs = interactions[ver](hccs, disabl, age);\n  return hccs;\n}\n\nfunction trump_hccs(hcc_list, ver, never_trump) {\n  // Given a list of HCCs and an HCC version, returns a list of HCCs after trumping\n  ver = ver.toLowerCase() || default_ver;\n  never_trump = never_trump || default_never_trump;\n  var hccmap = default_hccmap[ver];\n\n  // Make sure we're getting the right format\n  hcc_list_temp = clean_hcclist(hcc_list, ver);\n  if (never_trump == 0) {\n      var hcc_set = new Set(hcc_list_temp);\n      var trumped_set = new Set();\n      for (var hcc of hcc_set) {\n          if (hcc in hccmap) {\n              for (var child of hccmap[hcc]['children']) {\n                  trumped_set.add(child);\n              }\n          }\n      }\n      var temp_hcc_set = new Set([...hcc_set].filter(x => !trumped_set.has(x)));\n      hcc_list_temp = Array.from(temp_hcc_set);\n  }\n\n  var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n  hcc_list_temp.sort(collator.compare);\n  return hcc_list_temp;\n}\n\nfunction hcc_dct(hcc_list, ver, age, sex, verbose) {\n  var hccmap = default_hccmap[ver];\n  var unique_hccs = new Set();\n  for (var hcc of hcc_list) {\n      if (hcc in hccmap) {\n          unique_hccs.add(hcc);\n      }\n  }\n\n  var got_trumped = {};\n  for (var hcc of unique_hccs) {\n      for (var child of hccmap[hcc]['children']) {\n          got_trumped[child] = hcc;\n      }\n  }\n  var hcc_dct = {};\n\n  for (var hcc of unique_hccs) {\n      if (hccmap.hasOwnProperty(hcc)) {\n          hcc_dct[hcc] = JSON.parse(JSON.stringify(hccmap[hcc]))  // Get details for this hcc Code\n          delete hcc_dct[hcc]['parents'];\n          delete hcc_dct[hcc]['children'];\n      } else if (verbose) {\n          hcc_dct[hcc] = { \"desc\": \"\", \"parents\": {} };\n      }\n\n  }\n\n  for (var hcc in hcc_dct) {\n      for (var trumped_hcc in got_trumped) {\n          if (trumped_hcc == hcc) {  // If we find trumped HCC, replace with note of its demise\n              hcc_dct[hcc]['trumped by'] = got_trumped[trumped_hcc];\n          }\n      }\n  }\n\n  return hcc_dct;\n}\n\nfunction hcc_increment(old_list, new_list, ver, model, age, disabl, never_trump, baserate) {\n  // Utility to identify the incremental HCCs and value of adding a new list HCCs to a base list of HCCs\n  var new_hccs = prep_hccs(new_list, ver, age, disabl, never_trump)\n  var old_hccs = prep_hccs(old_list, ver, age, disabl, never_trump)\n  new_hccs = new_hccs + ','.concat(old_hccs)\n  var final_hccs = prep_hccs(new_hccs, ver, age, disabl, never_trump)\n  var diff = hcc_diff(old_hccs, final_hccs, ver, age, sex = '', model, disabl, never_trump, baserate)\n  diff[\"final_hccs\"] = final_hccs;\n  delete diff['downgraded'];\n  delete diff['downgrade_to'];\n  delete diff['deletes'];\n  return diff;\n}\n\nfunction dx_increments(old_list, new_list, ver, model, age, disabl, never_trump, baserate) {\n  // Utility to identify the incremental HCCs and value of adding a new list DXs to a base list of DXs\n  var verbose = default_verbose;\n  var old_hccs = dx2hcc(old_list, age, ver, sex = '', disabl, never_trump, verbose);\n  var new_hccs = dx2hcc(new_list, age, ver, sex = '', disabl, never_trump, verbose);\n  var diff = hcc_increment(old_hccs, new_hccs, ver, model, age, disabl, never_trump, baserate);\n\n  var dxinc = {\n      \"adds\": Array.from(get_hcc_dx(diff['adds'], clean_dxlist(new_list, ver), ver)),\n      \"upgraded\": Array.from(get_hcc_dx(diff[\"upgraded\"], clean_dxlist(old_list, ver), ver)),\n  };\n  dxinc['raf'] = diff['raf'];\n  dxinc['premium'] = diff['premium'];\n  return dxinc;\n}\n\nfunction get_hcc_dx(hcc_list, dx_list, ver) {\n  var dxmap = default_dxmap[ver];\n  var hcc_set = new Set(hcc_list);\n  var mydx = new Set();\n  for (var dx of dx_list) {\n      var temp_set = new Set(dxmap[dx]['hccs']);\n      var temp = ([...temp_set].filter(x => hcc_set.has(x)));\n      if (dxmap.hasOwnProperty(dx) && temp.length) {\n          mydx.add(dx);\n      }\n  }\n  // mydx = {dx for dx in dx_list if dx in dxmap and dxmap[dx]['hccs'].intersection(hcc_set)}\n  return mydx;\n}\n\nfunction hcc_diff(old_list, new_list, ver, age, sex, model, disabl, never_trump, baserate) {\n  /*\n  Calculate the changes between two hcc lists, {\"adds\":[], \"upgraded\":[] \"downgraded\":[], \"deletes\":[]}\n  - \"adds\" are new HCC Codes (includes upgrades of other codes),\n  - \"upgraded\" are codes from base that are no longer relevant due to new codes\n  - \"downgraded\" are codes from base that are present at a lower specificity in new\n  - \"deletes\" are codes from base that are no longer present at all\n  */\n  var hccmap = default_hccmap[ver];\n  // Prep cleans and trumps the list and add interactions\n  var old_set = new Set(prep_hccs(old_list, ver, age, disabl));\n  var new_set = new Set(prep_hccs(new_list, ver, age, disabl, never_trump));\n\n  // Find the full set of codes that each set can trump\n  var old_children = new Set();\n  var new_children = new Set();\n  var new_parents = new Set();\n  for (var hcc1 of old_set) {\n      if (hcc1 in hccmap) {\n          for (var child of hccmap[hcc1]['children']) {\n              old_children.add(child)\n          }\n      }\n  }\n  for (var hcc2 of new_set) {\n      if (hcc2 in hccmap) {\n          for (var child of hccmap[hcc2]['children']) {\n            new_children.add(child)\n          }\n      }\n  }\n  for (var hcc3 of new_set) {\n      if (hcc3 in hccmap) {\n          for (var child of hccmap[hcc3]['parents']) {\n            new_parents.add(child)\n          }\n      }\n  }\n\n  // New HCCs, except where they are trumped by old HCCs (downgrades)\n  var new_hccs_temp = new Set([...new_set].filter(x => !old_set.has(x)));\n  var new_hccs = new Set([...new_hccs_temp].filter(x => !old_children.has(x)));\n  var downgraded_temp = new Set([...old_set].filter(x => !new_set.has(x)));\n  var downgraded = new Set([...downgraded_temp].filter(x => new_parents.has(x)));\n  var downgrade_to_temp = new Set([...new_set].filter(x => !old_set.has(x)));\n  var downgrade_to = new Set([...downgrade_to_temp].filter(x => old_children.has(x)));\n  //new_hccs = new_set.difference(old_set).difference(old_children)\n  //downgraded = old_set.difference(new_set).intersection(new_parents)\n  //downgrade_to = new_set.difference(old_set).intersection(old_children)\n  var upgraded = new Set();\n  if (never_trump === 1) {\n      var prep_hccs_set = new Set(prep_hccs(Array.from(new_set)));\n      var upgraded_temp = new Set([...old_set].filter(x => !prep_hccs_set.has(x)));\n      upgraded = ([...upgraded_temp].filter(x => new_children.has(x)));\n      //old_set.difference(set(this.prep_hccs(list(new_set)))).intersection(new_children)\n  } else {\n      var upgraded_temp = new Set([...old_set].filter(x => !new_set.has(x)));\n      upgraded = ([...upgraded_temp].filter(x => new_children.has(x)));\n      //upgraded = old_set.difference(new_set).intersection(new_children)\n  }\n\n  var del_hccs_temp = new Set([...old_set].filter(x => !new_set.has(x)));\n  var del_hccs_union = new Set([...upgraded, ...downgraded]);\n  var del_hccs = new Set([...del_hccs_temp].filter(x => !del_hccs_union.has(x)));\n  //del_hccs = old_set.difference(new_set).difference(upgraded.union(downgraded))\n\n  var old_raf = hcc2raf(Array.from(old_set), ver = ver, model = model, baserate = baserate, never_trump = never_trump);\n  var new_raf = hcc2raf(Array.from(new_set), ver = ver, model = model, baserate = baserate, never_trump = never_trump);\n  var delta_raf = new_raf - old_raf;\n\n  var diff = {\n      \"adds\": Array.from(new_hccs),\n      \"upgraded\": Array.from(upgraded),\n      \"downgraded\": Array.from(downgraded),\n      \"downgrade_to\": Array.from(downgrade_to),\n      \"deletes\": Array.from(del_hccs),\n      \"raf\": delta_raf,\n      \"premium\": Math.round(delta_raf * baserate, 2)\n  }\n  return diff;\n}\n\nfunction member(condition_list, age, sex, model, orec, ver, baserate) {\n  /*\n      Builds an HCC risk score for a Medicare Advantage member given demographic and disease factors\n      :param dx_list: list of str\n                      List of DX codes; case and decimal insensitive\n      :param age: float\n                  Age of member\n      :param sex: str\n                  Gender of Member: Accepts \"M\"/\"F\", \"Male\"/\"Female\" or CMS numerical codes 1/2\n      :param model: str\n                  HCC Model to be used for member. Accepts:\n                      \"CNA\": Community - Non-dual aged\n                      \"CND\": Community - Non-dual disabled\n                      \"CFA\": Community - Full Benefit dual aged\n                      \"CFD\": Community - Full Benefit dual disabled\n                      \"CPA\": Community - Partial Benefit dual aged\n                      \"CPD\": Community - Partial Benefit dual disabled\n                      \"INS\": Institutional\n                      \"NE\": New enrollee\n                      \"SNPNE\": C-SNP new enrolee\n      :param orec: str\n                  Original Reason for Entitlement:\n                      \"0\": Old age (OASI)\n                      \"1\": Disability (DIB)\n                      \"2\": End Stage Renal Disease (ESRD)\n                      \"3\": Both DIB and ESRD\n\n      :param ver: str\n                  Version of HCC Model to be used (overrides default version set in Ccalc).\n                  Accepts {'v22', 'v23', 'v24'}\n      :return: dict\n              Map of factors and risk scores for member\n  */\n  \n  // Get age/sex/disability demographic codes\n  var disabl = model.endsWith(\"D\");\n  var demo_codes = agesex(age, sex, orec, model);\n  var cond_dict = condition_resolver(condition_list, ver);\n  var condition = cond_dict['condition'];\n  var allhcc = cond_dict['allhcc'];\n  var verbose = default_verbose;\n  var flag;\n  var raf;\n  var dx_dct;\n\n  if (allhcc == 1) {\n      var dx_dct = hcc_dct(condition, ver, age, sex, verbose);\n      unique_hccs = prep_hccs(condition, ver = ver, age = age);\n      unique_hccs = interactions[ver](unique_hccs, disabl, age);\n      raf = get_raf(demo_codes, unique_hccs, ver, model, verbose, baserate);\n      flag = 'hcc';\n  } else {\n      // process DX list\n      dx_dct = dx_hccs(condition, ver, age, sex, verbose);\n      var unique_hccs = dxdct_hccs(dx_dct);\n      unique_hccs = interactions[ver](unique_hccs, disabl, age);\n      raf = get_raf(demo_codes, unique_hccs, ver, model, verbose, baserate);\n      flag = 'dx';\n  }\n\n  return {\n      \"hcc_model\": { \"version\": ver, \"model\": model },\n      \"demo\": { \"age\": age, \"sex\": sex, \"orec\": orec },\n      \"raf\": raf,\n      'flag': flag,\n      \"dx_hccs\": dx_dct\n  }\n}\n\nfunction condition_resolver(conditionlist, ver = '', never_trump = 0, allhcc = 0) {\n  //need factoring\n  ver = ver.toLowerCase() || default_ver;\n  never_trump = never_trump || default_never_trump;\n  var list_hcc = [];\n  for (item in conditionlist) {\n    if (Number.isInteger(item) || item.startsWith('HCC')){\n      list_hcc.push(item);\n    }\n  }\n  // list_hcc = conditionlist.filter(item => Number.isInteger(item) || item.startsWith('HCC'));\n  var list_dx = [];\n  var list_dx_clean = [];\n  var dct = new Set();\n  if ((list_hcc.length > 0) || allhcc) {\n      allhcc = 1;\n      list_dx = conditionlist.filter(item => !(list_hcc.includes(item)));\n      list_dx_clean = clean_dxlist(list_dx, ver);\n      var hccs = dx2hcc(list_dx_clean, ver = ver, never_trump = never_trump);\n      var combined_hccs = list_hcc.concat(hccs);\n      dct = { 'allhcc': allhcc, 'condition': combined_hccs };\n\n  } else {\n      list_dx = conditionlist;\n      dct = { 'allhcc': allhcc, 'condition': list_dx };\n  }\n  return dct;\n}\n\nfunction agesex_edits(dx_dct, age, sex) {\n  /*\n  Edits DX List for a beneficiary based on AGE/SEX (From CMS I0V05ED2.TXT)\n  Valid for V22, V23, V24\n  :param dx_dct: dict\n                 Dict of {DX:HCC}\n  :param age: float\n              Age of member\n  :param sex: str\n              Member's gender\n  :return: dx_dct: dict\n              Dictionary of {DX:HCC} edited per member age/sex rules\n  */\n  var ed_leukemia = [\"C9100\", \"C9101\", \"C9102\", \"C9500\", \"C9501\", \"C9502\",\n      \"C7400\", \"C7401\", \"C7402\", \"C7410\", \"C7411\", \"C7412\",\n      \"C7490\", \"C7491\", \"C7492\"];\n\n  var ed_bronchitis = [\"J410\", \"J411\", \"J418\", \"J42\", \"J440\", \"J441\"];\n\n  var ed_vasc_insf = [\"K55011\", \"K55012\", \"K55019\", \"K55021\", \"K55022\",\n      \"K55029\", \"K55031\", \"K55032\", \"K55039\", \"K55041\", \"K55042\",\n      \"K55049\", \"K55051\", \"K55052\", \"K55059\", \"K55061\", \"K55062\",\n      \"K55069\", \"K5530\", \"K5531\", \"K5532\", \"K5533\"];\n\n  var ed_emphysema = [\"J430\", \"J431\", \"J432\", \"J438\", \"J439\", \"J449\", \"J982\", \"J983\"];\n\n  var ed_breastca = [\"C50011\", \"C50012\", \"C50019\", \"C50021\", \"C50022\", \"C50029\",\n      \"C50111\", \"C50112\", \"C50119\", \"C50121\", \"C50122\", \"C50129\",\n      \"C50211\", \"C50212\", \"C50219\", \"C50221\", \"C50222\", \"C50229\",\n      \"C50311\", \"C50312\", \"C50319\", \"C50321\", \"C50322\", \"C50329\",\n      \"C50411\", \"C50412\", \"C50419\", \"C50421\", \"C50422\", \"C50429\",\n      \"C50511\", \"C50512\", \"C50519\", \"C50521\", \"C50522\", \"C50529\",\n      \"C50611\", \"C50612\", \"C50619\", \"C50621\", \"C50622\", \"C50629\",\n      \"C50811\", \"C50812\", \"C50819\", \"C50821\", \"C50822\", \"C50829\",\n      \"C50911\", \"C50912\", \"C50919\", \"C50921\", \"C50922\", \"C50929\"];\n\n  var ed_low_bw = [\"P0500\", \"P0501\", \"P0502\", \"P0503\", \"P0504\", \"P0505\",\n      \"P0506\", \"P0507\", \"P0508\", \"P0509\", \"P0510\", \"P0511\",\n      \"P0512\", \"P0513\", \"P0514\", \"P0515\", \"P0516\", \"P0517\",\n      \"P0518\", \"P0519\", \"P052\", \"P059\", \"P0700\", \"P0701\",\n      \"P0702\", \"P0703\", \"P0710\", \"P0714\", \"P0715\", \"P0716\",\n      \"P0717\", \"P0718\", \"P0720\", \"P0721\", \"P0722\", \"P0723\",\n      \"P0724\", \"P0725\", \"P0726\", \"P0730\", \"P0731\", \"P0732\",\n      \"P0733\", \"P0734\", \"P0735\", \"P0736\", \"P0737\", \"P0738\",\n      \"P0739\", \"P080\", \"P081\", \"P0821\", \"P0822\"];\n\n  var ed_conjoined = [\"Q894\"];\n\n  var ed_newbn_substance = [\"K551\", \"K558\", \"K559\",\n      \"P041\", \"P0411\", \"P0412\", \"P0413\", \"P0414\", \"P0415\",\n      \"P0416\", \"P0417\", \"P0418\", \"P0419\", \"P041A\",\n      \"P042\", \"P043\", \"P0440\", \"P0441\", \"P0442\", \"P0449\",\n      \"P045\", \"P046\", \"P048\", \"P0481\", \"P0489\",\n      \"P049\", \"P930\", \"P938\", \"P961\", \"P962\",\n      \"Q390\", \"Q391\", \"Q392\", \"Q393\", \"Q394\", \"Q6410\",\n      \"Q6411\", \"Q6412\", \"Q6419\", \"Q790\", \"Q791\", \"Q792\",\n      \"Q793\", \"Q794\", \"Q7951\"];\n\n  var ed_chron_resp = [\"P270\", \"P271\", \"P278\", \"P279\"];\n\n  var ed_disruptive_mood = [\"F3481\"];\n\n  var ed_hemophilia = [\"D66\", \"D67\"];\n\n  // Optimal to have the loop outside of the age checks, but this is easier to read\n  for (var dx in dx_dct) {\n\n      // Split acute lymphoid and other acute leukemias, except  myeloid diagnoses to age 18+ (HCC 8)\n      // and age <18 (HCC 9). Split adrenal gland cancer diagnoses to age 18+ (HCC 10) and age <18 (HCC 9).\n      if (age < 18 && ed_leukemia.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC9\"]);\n      }\n\n      // Split chronic bronchitis diagnoses to age 18+ (HCC 160) and age <18 (HCC 161)\n      if (age < 18 && ed_bronchitis.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC161\"]);\n      }\n\n      // Split acute vascular insufficiency of intestine diagnosis to age 2+ (HCC 154) and age <2 (HCC 42)\n      if (age < 2 && ed_vasc_insf.includes(dx)) {\n        dx_dct[dx]['hccs'] = [(\"HCC42\")];\n      }\n\n      // Split breast cancer diagnoses to age 50+ (HCC 12) and age <50 (HCC 11)\n      if (age < 50 && ed_breastca.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC11\"]);\n      }\n\n      // Split emphysema diagnoses to age 18+ (HCC 160) and age 2-17 (HCC160; split not needed in HHS model).\n      // If age <2 out of payment model\n      if (age < 2 && ed_emphysema.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC-1\"]);\n      }\n\n      // Edit for newborn low birthweight. If age 1+ out of payment model\n      if (age != 0 && ed_low_bw.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC-1\"]);\n      }\n\n      // Split conjoined twins diagnoses to age 1+ (HCC 97) and age <1 (HCC 247)\n      if (age >= 1 && ed_conjoined.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC97\"]);\n      }\n\n      // Neonatal effects of maternal drug abuse: If age 2+ out of payment model\n      if (age >= 2 && ed_newbn_substance.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC-1\"]);\n      }\n\n      // Split chronic respiratory disease arising in the perinatal period diagnoses to age 2+\n      // (HCC 162) and age <2 (HCC 127).\n      if (age >= 2 && ed_chron_resp.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC162\"]);\n      }\n\n      // Mood disorder: Edit for targeted age of diagnosis. If age <6 or age >18 out of payment model.\n      if (age < 6 || age > 18 && ed_disruptive_mood.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC-1\"]);\n      }\n\n      // Split hemophilia diagnoses to male (HCC 66 if age <65 or HCC 66 if age 65+; age split not needed in HHS model)\n      //  and female (HCC 75)\n      female_sex = [\"2\", \"F\", \"Female\"];\n      if (female_sex.includes(sex) && ed_hemophilia.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC75\"]);\n      }\n  }\n\n  edit_dct = {};  // Build new dict after filtering out all HCCs edited out\n  for (dx in dx_dct) {\n      if (dx_dct[dx]['hccs'] != ([\"HCC-1\"])) {\n          edit_dct[dx] = dx_dct[dx];\n      }\n  }\n\n  return edit_dct;\n}\n\nfunction get_raf(demo_lst, hcc_lst, ver, model, verbose, baserate) {\n  /*\n  Look up demographic and hcc RAF for a member given codes. IMPORTANT: ASSUMES HCCs are already clean and deduped\n  and hierarchy. Based on CMS V2218O1P.TXT.  Returns a dict of risk scores in the format:\n  {\n      raf: float of total risk factor,\n      premium: PM PM payment for members of this raf and base rate($)\n      demo_raf: float of demographic risk factor\n      hcc_raf: float of hcc risk factor\n      demo_detail: dict of {demographic_code: demo_raf} for each demographic code in list\n      hcc_defail: dict of {hcc_code: hcc:raf} for each hcc code in list\n  :param model: str\n                  Hcc model for use\n  :param demo_lst: list of str\n                  List of applicable demographic codes for a member (eg CNA_F65_70)\n  :param hcc_lst: list of str\n                  List of hccs (assumes hccs have already been trumped)\n  :param ver: str\n                  Optional HCC version to be used in calculation\n  :param model: str\n          Optional HCC model to be used in calculation\n  :param verbose: bool\n  :param baserate: float\n                  pmpm premium base rate\n  :return: dict\n          raf_dct\n  */\n  ver = ver || default_ver;\n  model = model|| default_model;\n  baserate = baserate || default_baserate;\n  verbose = verbose || default_verbose;\n\n  var hcccoefn = default_hcccoefn[ver];\n  var demo_detail = {};\n  var hcc_detail = {};\n  var demo_raf = 0.0;\n  var hcc_raf = 0.0;\n\n  for (var demo of demo_lst) {\n      if (hcccoefn.hasOwnProperty(demo)) {\n          demo_detail[demo] = hcccoefn[demo];\n          demo_raf += hcccoefn[demo];\n      }\n  }\n\n  for (var hcc = 0; hcc < hcc_lst.length; hcc++) {\n      var label = model + \"_\" + hcc_lst[hcc];\n      if (label in hcccoefn) {\n          hcc_detail[label] = hcccoefn[label];\n          hcc_raf += hcccoefn[label];\n      } else if (verbose) {\n          hcc_detail[label] = 0.0;\n      }\n  }\n\n  var score = (demo_raf + hcc_raf).toFixed(4);\n  var raf_dct = {\n      \"score\": score,\n      \"premium\": (score * baserate).toFixed(2),\n      \"demo_score\": (demo_raf).toFixed(4),\n      \"hcc_score\": (hcc_raf).toFixed(4),\n      \"demo_detail\": demo_detail,\n      \"hcc_detail\": hcc_detail\n  };\n  return raf_dct;\n}\n\nfunction agesex(age, sex, orec, model) {\n  /*\n      Create demographic variables used in regressions, from CMS SAS macro AGESEXV2\n      Valid for V22, V23, V24\n      :param age: float\n                  Age of beneficiary\n      :param sex: str\n                  Gender of beneficiary\n      :param orec: str\n                  Original reason for enrollment\n      :param model: str\n                  Code for CMS model (str)\n      :return: list of str\n              list of demographic str for looking up demo coefficients\n  */\n  let age_maps = {\n      \"STD\": [\"0_34\", \"35_44\", \"45_54\", \"55_59\", \"60_64\", \"65_69\", \"70_74\", \"75_79\",\n          \"80_84\", \"85_89\", \"90_94\", \"95_GT\"],\n      \"NE\": [\"0_34\", \"35_44\", \"45_54\", \"55_59\", \"60_64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"70_74\", \"75_79\",\n          \"80_84\", \"85_89\", \"90_94\", \"95_GT\"]\n  };\n\n  age = Math.trunc(age);  // In case float is passed and someone at upper age bound\n\n  let demo_str;\n  let male_sex = [\"M\", \"MALE\", \"1\"];\n  if (male_sex.includes(sex.toUpperCase())) {\n      demo_str = 'M';\n  } else {\n      demo_str = \"F\";\n  }\n\n  // Directly from CMS AGESEXV2\n  let disabl = (age < 65) && (orec != \"0\");\n  let origds = (orec == \"1\") && !(disabl);\n  let medicaid;\n  let medicaid_condition = [\"CP\", \"CF\"];\n  if (medicaid_condition.includes(model)) {\n      medicaid = true;\n  } else {\n      medicaid = false;\n  }\n  let new_enrolee = model.endsWith(\"NE\");\n  let age_labels = [];\n  if (new_enrolee) {\n      age_labels = age_maps[\"NE\"];\n  } else {\n      age_labels = age_maps[\"STD\"];\n  }\n\n  // Derive the lower bound & upper bound of each age band from ordered list of age labels\n  let age_lower_bounds = [];\n  let age_upper_bounds = [];\n  for (let i in age_labels) {\n      let split = age_labels[i].split(\"_\");\n      age_lower_bounds.push(split[0]);\n      age_upper_bounds.push(split[1]);\n  }\n\n  for (const [i, lower_bound] of age_lower_bounds.entries()) {\n      if (i == age_lower_bounds[age_lower_bounds.length] - 1) {\n          demo_str += age_labels[i];\n          break;\n      }\n      if ((lower_bound >= age) && (lower_bound < age_lower_bounds[i + 1])) {\n          demo_str += age_labels[i];\n          break;\n      }\n  }\n\n  if (model.endsWith(\"NE\")) {\n      if (medicaid) {\n          let mcaid_flag = \"\";\n      } else {\n          mcaid_flag = \"N\";\n      }\n      if (origds) {\n          let origds_flag = \"\";\n      } else {\n          origds_flag = \"N\";\n      }\n      demo_str = mcaid_flag + \"MCAID_\" + origds_flag + \"ORIGDIS_NE\" + demo_str;\n  }\n\n  let demo_lst = [model + \"_\" + demo_str];\n  let model_type = [\"CNA\", \"CFA\", \"CPA\"];\n  let ds_str;\n  let sex_type;\n\n  if ((model_type.includes(model)) && origds) {\n      if (sex === \"M\") {\n          sex_type = \"Male\";\n      } else {\n          sex_type = \"Female\";\n      }\n      ds_str = model + \"_OriginallyDisabled_\" + sex_type;\n      demo_lst.push(ds_str);\n  }\n  return demo_lst;\n}\n\nfunction v22_interactions(ccs, disabl, age = '') {\n  /*\n  Calculated interaction HCCs given a list of hccs, age, and disability flag\n  :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\n  :param disabl: CMS disabled flag\n  :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\n  :return: List of HCC codes, including interaction codes\n  */\n  var cc_set = new Set(ccs);\n  var int_hccs = {};\n\n  // diagnostic categories\n\n  var diag_cats = {\n      \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\n      \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\n      \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\n      \"CHF\": new Set([\"HCC85\"]),\n      \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\n      \"RENAL\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\"]),\n      \"SEPSIS\": new Set([\"HCC2\"]),\n      \"gSubstanceAbuse\": new Set([\"HCC54\", \"HCC55\"]),\n      \"gPsychiatric\": new Set([\"HCC57\", \"HCC58\"])\n  };\n\n  var my_dcs = {};\n\n  for (var key in diag_cats) {\n      if (diag_cats.hasOwnProperty(key)) {\n          var key_set = new Set(diag_cats[key])\n          var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\n          my_dcs[key] = new_values;\n      }\n  \n  }\n  // Community Interactions\n  var hcc85_set = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  var hcc47_set = new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\n  var hcc96_set = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\n\n  // int_hccs[\"HCC47_gCancer\"] = my_dcs[\"CANCER\"] && new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\n  if ( my_dcs[\"CANCER\"].size && hcc47_set.size) {\n    int_hccs[\"HCC47_gCancer\"] = hcc47_set;\n  }else {\n    int_hccs[\"HCC47_gCancer\"] = new Set();\n  }\n\n  // int_hccs[\"HCC85_gDiabetesMellit\"] = my_dcs[\"DIABETES\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"DIABETES\"].size && hcc85_set.size) {\n      int_hccs[\"HCC85_gDiabetesMellit\"] = hcc85_set;\n  }else {\n    int_hccs[\"HCC85_gDiabetesMellit\"] = new Set();\n  }\n\n  // int_hccs[\"HCC85_gCopdCF\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"gCopdCF\"].size && hcc85_set.size) {\n      int_hccs[\"HCC85_gCopdCF\"] = hcc85_set;\n  }else {\n    int_hccs[\"HCC85_gCopdCF\"] = new Set();\n  }\n\n  // int_hccs[\"HCC85_gRenal_V23\"] = my_dcs[\"RENAL\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"RENAL\"].size && hcc85_set.size) {\n      int_hccs[\"HCC85_gRenal_V23\"] = hcc85_set;\n  }else {\n    int_hccs[\"HCC85_gRenal_V23\"] = new Set();\n  }\n  // int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\n  if (my_dcs[\"gCopdCF\"].size && my_dcs[\"CARD_RESP_FAIL\"].size) {\n    int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"CARD_RESP_FAIL\"];\n  }else {\n    int_hccs[\"gRespDepandArre_gCopdCF\"] = new Set();\n  }\n  // int_hccs[\"HCC85_HCC96\"] = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (hcc96_set.size && hcc85_set.size) {\n    int_hccs[\"HCC85_HCC96\"] = hcc96_set;\n  }else {\n    int_hccs[\"HCC85_HCC96\"] = new Set();\n  }\n  // int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"] = my_dcs[\"gPsychiatric\"] && my_dcs[\"gSubstanceAbuse\"];\n  if (my_dcs[\"gPsychiatric\"].size && my_dcs[\"gSubstanceAbuse\"].size) {\n    int_hccs[\"gSubstanceAbuse_gPsychiatric\"] =  my_dcs[\"gSubstanceAbuse\"];\n  }else {\n    int_hccs[\"gSubstanceAbuse_gPsychiatric\"] = new Set();\n  }\n  // institutional model interactions\n  var hcc188_set = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\n  var hcc114_set = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  var hcc57_set = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x)));\n  var hcc79_set = new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\n  \n  int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\n  //int_hccs[\"CHF_gCopdCF\"] = my_dcs[\"CHF\"] && my_dcs[\"gCopdCF\"];\n  if (my_dcs[\"CHF\"].size && my_dcs[\"gCopdCF\"].size) {\n    int_hccs[\"CHF_gCopdCF\"] =  my_dcs[\"gCopdCF\"];\n  }else {\n    int_hccs[\"CHF_gCopdCF\"] = new Set();\n  }\n\n  //int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\n  if (my_dcs[\"CARD_RESP_FAIL\"].size && my_dcs[\"gCopdCF\"].size) {\n    int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] =  my_dcs[\"CARD_RESP_FAIL\"];\n  }else {\n    int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] = new Set();\n  }\n\n  //int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = my_dcs[\"SEPSIS\"] && int_hccs[\"PRESSURE_ULCER\"];\n  if (my_dcs[\"SEPSIS\"].size && int_hccs[\"PRESSURE_ULCER\"].size) {\n    int_hccs[\"SEPSIS_PRESSURE_ULCER\"] =  int_hccs[\"PRESSURE_ULCER\"];\n  }else {\n    int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = new Set();\n  }\n\n\n  // int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"SEPSIS\"].size && hcc188_set.size) {\n    int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = hcc188_set;\n  }else {\n    int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = new Set();\n  }\n\n  // int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\n  if (int_hccs[\"PRESSURE_ULCER\"].size && hcc188_set.size) {\n    int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n  }else {\n    int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set();\n  }\n\n  // int_hccs[\"DIABETES_CHF\"] = my_dcs[\"DIABETES\"] && my_dcs[\"CHF\"];\n  if (my_dcs[\"DIABETES\"].size && my_dcs[\"CHF\"].size) {\n    int_hccs[\"DIABETES_CHF\"] = my_dcs[\"CHF\"];\n  }else {\n    int_hccs[\"DIABETES_CHF\"] = new Set();\n  }\n\n\n  // int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"gCopdCF\"].size && hcc114_set.size) {\n    int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = hcc114_set;\n  }else {\n    int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = new Set();\n  }\n\n  // int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\n  if (int_hccs[\"PRESSURE_ULCER\"].size && hcc114_set.size) {\n    int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = int_hccs[\"PRESSURE_ULCER\"];\n  }else {\n    int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set();\n  }\n\n\n  // int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"SEPSIS\"].size && hcc114_set.size) {\n    int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = hcc114_set;\n  }else {\n    int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = new Set();\n  }\n\n  // int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"gCopdCF\"];\n  if (my_dcs[\"gCopdCF\"].size && hcc57_set.size) {\n    int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = my_dcs[\"gCopdCF\"];\n  }else {\n    int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set();\n  }\n  // int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"CHF\"];\n  if (my_dcs[\"CHF\"].size && hcc57_set.size) {\n    int_hccs[\"SCHIZOPHRENIA_CHF\"] = my_dcs[\"CHF\"];\n  }else {\n    int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set();\n  }\n  // int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\n  if (hcc79_set.size && hcc57_set.size) {\n    int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = hcc79_set;\n  }else {\n    int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set();\n  }\n\n  if (disabl === true) {\n      int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n      int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\n\n      if (typeof age !== 'undefined' && age < 65) {\n          int_hccs[\"disable_substAbuse_psych_V23\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric\"]\n      }\n  }\n\n  var int_hccs_new = [];\n  for (var key in int_hccs) {\n     if (int_hccs.hasOwnProperty(key)) {\n          if (int_hccs[key].size !== 0) {\n              int_hccs_new.push(key);\n          }\n      }\n  }\n  return ccs.concat(int_hccs_new)\n}\n\nfunction v23_interactions(ccs, disabl, age = '') {\n  /*\n  Calculated interaction HCCs given a dict of hccs, age, and disability flag\n  :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\n  :param disabl: CMS disabled flag\n  :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\n  :return: List of HCC codes, including interaction codes\n  */\n  var cc_set = new Set(ccs);\n  var int_hccs = {};\n\n  // diagnostic categories\n\n  var diag_cats = {\n      \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\n      \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\n      \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\n      \"CHF\": new Set([\"HCC85\"]),\n      \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\n      \"RENAL_V23\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\",\"HCC138\"]),\n      \"SEPSIS\": new Set([\"HCC2\"]),\n      \"gSubstanceAbuse_V23\": new Set([\"HCC54\", \"HCC55\",\"HCC56\"]),\n      \"gPsychiatric_V23\": new Set([\"HCC57\", \"HCC58\",\"HCC59\", \"HCC60\"])\n  };\n\n  var my_dcs = {};\n\n  for (var key in diag_cats) {\n      if (diag_cats.hasOwnProperty(key)) {\n          var key_set = new Set(diag_cats[key])\n          var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\n          my_dcs[key] = new_values;\n      }\n  \n  }\n  // Community Interactions\n  var hcc85_set = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  var hcc47_set = new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\n  var hcc96_set = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\n  \n  // int_hccs[\"HCC47_gCancer\"] = my_dcs[\"CANCER\"] && new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\n  if ( my_dcs[\"CANCER\"].size && hcc47_set.size) {\n      int_hccs[\"HCC47_gCancer\"] = hcc47_set;\n  }else {\n    int_hccs[\"HCC47_gCancer\"] = new Set();\n  }\n  \n  // int_hccs[\"HCC85_gDiabetesMellit\"] = my_dcs[\"DIABETES\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"DIABETES\"].size && hcc85_set.size) {\n      int_hccs[\"HCC85_gDiabetesMellit\"] = hcc85_set;\n  }else {\n    int_hccs[\"HCC85_gDiabetesMellit\"] = new Set();\n  }\n\n  // int_hccs[\"HCC85_gCopdCF\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"gCopdCF\"].size && hcc85_set.size) {\n      int_hccs[\"HCC85_gCopdCF\"] = hcc85_set;\n  }else {\n    int_hccs[\"HCC85_gCopdCF\"] = new Set();\n  }\n  \n  // int_hccs[\"HCC85_gRenal_V23\"] = my_dcs[\"RENAL_V23\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if ( my_dcs[\"RENAL_V23\"].size && hcc85_set.size) {\n      int_hccs[\"HCC85_gRenal_V23\"] = hcc85_set;\n  }else {\n    int_hccs[\"HCC85_gRenal_V23\"] = new Set();\n  }\n  // int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\n  if (my_dcs[\"gCopdCF\"].size && my_dcs[\"CARD_RESP_FAIL\"].size) {\n    int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"CARD_RESP_FAIL\"];\n  }else {\n    int_hccs[\"gRespDepandArre_gCopdCF\"] = new Set();\n  }\n  // int_hccs[\"HCC85_HCC96\"] = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (hcc96_set.size && hcc85_set.size) {\n    int_hccs[\"HCC85_HCC96\"] = hcc96_set;\n  }else {\n    int_hccs[\"HCC85_HCC96\"] = new Set();\n  }\n  // int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"] = my_dcs[\"gPsychiatric_V23\"] && my_dcs[\"gSubstanceAbuse_V23\"];\n  if (my_dcs[\"gPsychiatric_V23\"].size && my_dcs[\"gSubstanceAbuse_V23\"].size) {\n    int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"] =  my_dcs[\"gSubstanceAbuse_V23\"];\n  }else {\n    int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"] = new Set();\n  }\n\n  // institutional model interactions\n  var hcc188_set = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\n  var hcc114_set = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  var hcc57_set = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x)));\n  var hcc79_set = new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\n  // int_hccs[\"CHF_gCopdCF\"] = my_dcs[\"CHF\"] && my_dcs[\"gCopdCF\"];\n  if (my_dcs[\"CHF\"].size && my_dcs[\"gCopdCF\"].size) {\n    int_hccs[\"CHF_gCopdCF\"] =  my_dcs[\"gCopdCF\"];\n  }else {\n    int_hccs[\"CHF_gCopdCF\"] = new Set();\n  }\n  // int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\n  if (my_dcs[\"CARD_RESP_FAIL\"].size && my_dcs[\"gCopdCF\"].size) {\n    int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] =  my_dcs[\"CARD_RESP_FAIL\"];\n  }else {\n    int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] = new Set();\n  }\n  // int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = my_dcs[\"SEPSIS\"] && int_hccs[\"PRESSURE_ULCER\"];\n  if (my_dcs[\"SEPSIS\"].size && int_hccs[\"PRESSURE_ULCER\"].size) {\n    int_hccs[\"SEPSIS_PRESSURE_ULCER\"] =  int_hccs[\"PRESSURE_ULCER\"];\n  }else {\n    int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = new Set();\n  }\n  // int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"SEPSIS\"].size && hcc188_set.size) {\n    int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = hcc188_set;\n  }else {\n    int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = new Set();\n  }\n  // int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\n  if (int_hccs[\"PRESSURE_ULCER\"].size && hcc188_set.size) {\n    int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n  }else {\n    int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set();\n  }\n  // int_hccs[\"DIABETES_CHF\"] = my_dcs[\"DIABETES\"] && my_dcs[\"CHF\"];\n  if (my_dcs[\"DIABETES\"].size && my_dcs[\"CHF\"].size) {\n    int_hccs[\"DIABETES_CHF\"] = my_dcs[\"CHF\"];\n  }else {\n    int_hccs[\"DIABETES_CHF\"] = new Set();\n  }\n  // int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"gCopdCF\"].size && hcc114_set.size) {\n    int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = hcc114_set;\n  }else {\n    int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = new Set();\n  }\n  // int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\n  if (int_hccs[\"PRESSURE_ULCER\"].size && hcc114_set.size) {\n    int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = int_hccs[\"PRESSURE_ULCER\"];\n  }else {\n    int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set();\n  }\n  // int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"SEPSIS\"].size && hcc114_set.size) {\n    int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = hcc114_set;\n  }else {\n    int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = new Set();\n  }\n  // int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"gCopdCF\"];\n  if (my_dcs[\"gCopdCF\"].size && hcc57_set.size) {\n    int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = my_dcs[\"gCopdCF\"];\n  }else {\n    int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set();\n  }\n  // int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"CHF\"];\n  if (my_dcs[\"CHF\"].size && hcc57_set.size) {\n    int_hccs[\"SCHIZOPHRENIA_CHF\"] = my_dcs[\"CHF\"];\n  }else {\n    int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set();\n  }\n  // int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\n  if (hcc79_set.size && hcc57_set.size) {\n    int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = hcc79_set;\n  }else {\n    int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set();\n  }\n\n  if (disabl === true) {\n      int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n      int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\n\n      if (typeof age !== 'undefined' && age < 65) {\n          int_hccs[\"disable_substAbuse_psych_V23\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"]\n      }\n  }\n\n  var int_hccs_new = [];\n  for (var key in int_hccs) {\n     if (int_hccs.hasOwnProperty(key)) {\n          if (int_hccs[key].size !== 0) {\n              int_hccs_new.push(key);\n          }\n      }\n  }\n  \n  return ccs.concat(int_hccs_new)\n}\n\nfunction v24_interactions(ccs, disabl, age = '') {\n  /*\n  Calculated interaction HCCs given a list of hccs, age, and disability flag\n  :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\n  :param disabl: CMS disabled flag\n  :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\n  :return: List of HCC codes, including interaction codes\n  */\n  var cc_set = new Set(ccs);\n  var int_hccs = {};\n   var cnt= cc_set.length;\n   int_hccs[\"D10P\"]=cnt > 9\n   var index = \"D\".concat(cnt)\n   int_hccs[index] = (cnt > 3 && cnt < 10)\n  // diagnostic categories\n\n  var diag_cats = {\n      \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\n      \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\n      \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\n      \"CHF\": new Set([\"HCC85\"]),\n      \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\n      \"RENAL_V24\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\", \"HCC138\"]),\n      \"SEPSIS\": new Set([\"HCC2\"]),\n      \"gSubstanceAbuse_V24\": new Set([\"HCC54\", \"HCC55\", \"HCC56\"]),\n      \"gPsychiatric_V24\": new Set([\"HCC57\", \"HCC58\", \"HCC59\", \"HCC60\"])\n  };\n\n  var my_dcs = {};\n\n  for (var key in diag_cats) {\n      if (diag_cats.hasOwnProperty(key)) {\n          var key_set = new Set(diag_cats[key])\n          var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\n          my_dcs[key] = new_values;\n      }\n  \n  }\n  // Community Interactions\n  var hcc85_set = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  var hcc47_set = new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\n  var hcc96_set = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\n  // int_hccs[\"HCC47_gCancer\"] = my_dcs[\"CANCER\"] && new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\n  if ( my_dcs[\"CANCER\"].size && hcc47_set.size) {\n      int_hccs[\"HCC47_gCancer\"] = hcc47_set;\n  }else {\n    int_hccs[\"HCC47_gCancer\"] = new Set();\n  }\n  \n  // int_hccs[\"HCC85_gDiabetesMellit\"] = my_dcs[\"DIABETES\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"DIABETES\"].size && hcc85_set.size) {\n      int_hccs[\"HCC85_gDiabetesMellit\"] = hcc85_set;\n  }else {\n    int_hccs[\"HCC85_gDiabetesMellit\"] = new Set();\n  }\n\n  // int_hccs[\"HCC85_gCopdCF\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"gCopdCF\"].size && hcc85_set.size) {\n      int_hccs[\"HCC85_gCopdCF\"] = hcc85_set;\n  }else {\n    int_hccs[\"HCC85_gCopdCF\"] = new Set();\n  }\n  \n  // int_hccs[\"HCC85_gRenal_V24\"] = my_dcs[\"RENAL_V24\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"RENAL_V24\"].size && hcc85_set.size) {\n      int_hccs[\"HCC85_gRenal_V24\"] = hcc85_set;\n  }else {\n    int_hccs[\"HCC85_gRenal_V24\"] = new Set();\n  }\n  // int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\n  if (my_dcs[\"gCopdCF\"].size && my_dcs[\"CARD_RESP_FAIL\"].size) {\n    int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"CARD_RESP_FAIL\"];\n  }else {\n    int_hccs[\"gRespDepandArre_gCopdCF\"] = new Set();\n  }\n  // int_hccs[\"HCC85_HCC96\"] = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (hcc96_set.size && hcc85_set.size) {\n    int_hccs[\"HCC85_HCC96\"] = hcc96_set;\n  }else {\n    int_hccs[\"HCC85_HCC96\"] = new Set();\n  }\n  // int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"] = my_dcs[\"gPsychiatric_V24\"] && my_dcs[\"gSubstanceAbuse_V24\"];\n  if (my_dcs[\"gPsychiatric_V24\"].size && my_dcs[\"gSubstanceAbuse_V24\"].size) {\n    int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"] =  my_dcs[\"gSubstanceAbuse_V24\"];\n  }else {\n    int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"] = new Set();\n  }\n  \n  // institutional model interactions\n  var hcc188_set = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\n  var hcc114_set = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  var hcc57_set = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x)));\n  var hcc79_set = new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\n\n\n  // int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = my_dcs[\"SEPSIS\"] && int_hccs[\"PRESSURE_ULCER\"];\n  if (my_dcs[\"SEPSIS\"].size && int_hccs[\"PRESSURE_ULCER\"].size) {\n    int_hccs[\"SEPSIS_PRESSURE_ULCER\"] =  int_hccs[\"PRESSURE_ULCER\"];\n  }else {\n    int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = new Set();\n  }\n  // int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"SEPSIS\"].size && hcc188_set.size) {\n    int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = hcc188_set;\n  }else {\n    int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = new Set();\n  }\n  // int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\n  if (int_hccs[\"PRESSURE_ULCER\"].size && hcc188_set.size) {\n    int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n  }else {\n    int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set();\n  }\n\n  // int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"gCopdCF\"].size && hcc114_set.size) {\n    int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = hcc114_set;\n  }else {\n    int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = new Set();\n  }\n  // int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\n  if (int_hccs[\"PRESSURE_ULCER\"].size && hcc114_set.size) {\n    int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = int_hccs[\"PRESSURE_ULCER\"];\n  }else {\n    int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set();\n  }\n  // int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"SEPSIS\"].size && hcc114_set.size) {\n    int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = hcc114_set;\n  }else {\n    int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = new Set();\n  }\n  // int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"gCopdCF\"];\n  if (my_dcs[\"gCopdCF\"].size && hcc57_set.size) {\n    int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = my_dcs[\"gCopdCF\"];\n  }else {\n    int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set();\n  }\n  // int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"CHF\"];\n  if (my_dcs[\"CHF\"].size && hcc57_set.size) {\n    int_hccs[\"SCHIZOPHRENIA_CHF\"] = my_dcs[\"CHF\"];\n  }else {\n    int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set();\n  }\n  // int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\n  if (hcc79_set.size && hcc57_set.size) {\n    int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = hcc79_set;\n  }else {\n    int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set();\n  }\n  if (disabl == true) {\n      int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n      int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\n\n      if (typeof age !== 'undefined' && age < 65) {\n          int_hccs[\"disable_substAbuse_psych_V24\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"]\n      }\n  }\n\n  var int_hccs_new = [];\n  for (var key in int_hccs) {\n     if (int_hccs.hasOwnProperty(key)) {\n          if (int_hccs[key].size !== 0) {     \n              int_hccs_new.push(key);\n          }\n      }\n  }\n  return ccs.concat(int_hccs_new)\n}"],"sourceRoot":""}